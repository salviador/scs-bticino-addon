{"version":3,"sources":["MYnavBar.js","Test/Switch.js","Test/Sensori_Temperatura.js","Test/Termostati.js","Test/Serrande_Tapparelle.js","Test/Dimmer.js","Test/Gruppi.js","Test/Serrature.js","Test/Campanello_porta.js","Test/Dispositivi.js","Test/Test.js","Configurazione/Sensore1.js","Configurazione/ConfigurazioneDispositivi.js","Configurazione/AggiungiAttuatore.js","Configurazione/Configurazione.js","HomePage/Homepage.js","Configurazione/DatabaseManager.js","NodeRedAlexa/NodeRedAlexa.js","NodeRedAlexa/noderedHome.js","NodeRedAlexa/NodeRedAWSDispositivi.js","NodeRedAlexa/noderedAlexaAWS.js","App.js","reportWebVitals.js","index.js"],"names":["MYnavBar","Container","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ON_OFF","device","valuedataRT","clientMWTT","useState","statoONOFF","setstatoONOFF","useEffect","nome_attuatore","stato","localeCompare","style","paddingTop","Card","width","border","Header","Row","Col","textAlign","fontSize","marginRight","indirizzo_Ambiente","indirizzo_PL","Body","fluid","lg","data-icon","src","alignSelf","alignItems","type","onClick","connected","topic","publish","Footer","margin","padding","Sensori_Temperatura","statosensore","setstatosensore","Button","size","variant","Termostati","temp_termostato","settemp_termostato","modalita_termostato","setmodalita_termostato","m","split","modalita","toLowerCase","name","step","value","onChange","event","target","onBlur","Serrande_Tapparelle","percentualeTapparelle","set_percentualeTapparelle","sm","tooltip","min","max","onAfterChange","Dimmer","statodimmerONOFF","setstatodimmerONOFF","statodimmerPercent","setstatodimmerPercent","percentualeDimmer","set_percentualeDimmer","alt","String","console","log","Grupppi","Serrature","Campanello_porta","Dispositivi","mqttdata","tipo_attuatore","Gruppi","Test","lista_dispositivi","setListaDispositivi","MqttClient","setMqttClient","MQTT_data","setMQTT_data","setDebugSCSbus","client","loadDevices","a","fetch","ADDRESS_SERVER","then","r","json","data","connectMqtt","devices","cfg","host","window","location","hostname","proto","use_tls","url","ws_port","path","options","reconnectPeriod","clean","username","password","mqtt","connect","on","subscribe","err","error","message","end","payload","packet","TextDecoder","decode","prev","parts","length","warn","deviceNameFromTopic","mesg","matchingDevice","find","dev","dd","map","d","unsubscribe","e","i","marginBottom","Sensore1","handle_CHANHE_NOME","handle_CHANHE_A","handle_CHANHE_PL","handle_TIPO","handle_TIMER_UP","handle_TIMER_DOWN","handle_ELIMINA","optionsStateTipoAttuatori","setoptionsStateTipoAttuatori","optionsStateTipoAttuatoriTIMER","setoptionsStateTipoAttuatoriTIMER","nomeATTUATORE","setinomeATTUATORE","indirizzo_A","setindirizzo_A","setindirizzo_PL","TIMER_UP","setTIMER_UP","TIMER_DOWN","setTIMER_DOWN","timer_salita","timer_discesa","handlChangeAMBIENTEind","handlChangePUNTOLUCEind","handlChangeTIMER_UP","handlChangeTIMER_DOWN","valorePulito","replace","nuovoNomeNormalizzato","trim","nuovonome","textTransform","ConfigurazioneDispositivi","AggiungiAttuatore","handel_AGIUNGInew","placeholder","nomeNormalizzato","Configurazioni","show","setShow","handleClose","handleShow","messaggio_da_visualizzare","setmessaggio_da_visualizzare","res","fetchData","post_request_update_database","address","datas","JSON","stringify","method","headers","body","response","myArray","filter","Modal","onHide","backdrop","keyboard","closeButton","Title","Homepage","history","useHistory","push","DatabaseManager","uploading","setUploading","setMessage","messageType","setMessageType","showMessage","text","setTimeout","downloadDatabase","ok","Error","blob","URL","createObjectURL","document","createElement","download","Date","toISOString","appendChild","click","revokeObjectURL","removeChild","uploadDatabase","file","files","endsWith","formData","FormData","append","result","reload","createBackup","backup_file","paddingBottom","Alert","onClose","dismissible","htmlFor","as","disabled","Spinner","animation","role","aria-hidden","accept","display","NoderedAlexa","setstato_esporta","stato_startNode","setstato_startNode","link_nodered","setlink_nodered","flow_anuale","setflow_anuale","textAreaRef","useRef","stato_startmanuale","setstato_startmanuale","secondu","setsecondu","setover","timerID","settimerID","second","clearTimeout","handle_startNodered","t","setInterval","handle_CopyClipboard","current","select","execCommand","focus","color","add","marginTop","Form","Control","rows","readonly","ref","add2","listStyleType","handle_codeflow_manuale_incolla","NoderedHome","NodeRedAWSDispositivi","name_EndPoint","setname_EndPoint","nome_endpoint","NoderedAlexaAWS","add_EndPoint","setadd_EndPoint","FILE_private_key","setFILE_private_key","FILE_cert_pem","setFILE_cert_pem","FILE_root_CA","setFILE_root_CA","fetchDataDispositivi","EndPoint","PRIVATE_KEY","CERT_PEM","CRT","selectedFile","setSelectedFile","changeHandler","handleSubmission","tipo","catch","App","exact","component","Configurazione","noderedHome","noderedAlexa","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf0469b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./App.css\"\r\n\r\nfunction MYnavBar() {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"\">SCSshield</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/\">Home</Nav.Link>\r\n                            <Nav.Link href=\"configurazione.html\">Configurazioni</Nav.Link>\r\n                            <Nav.Link href=\"database.html\">Database</Nav.Link>\r\n                            <Nav.Link href=\"test.html\">Test</Nav.Link>\r\n                            <Nav.Link href=\"noderedHome.html\">Node-Red</Nav.Link>                           \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MYnavBar;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\nfunction ON_OFF({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"lamp_accesa.svg\");\r\n            } else {\r\n                setstatoONOFF(\"lamp_spenta.svg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>ON/OFF</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ON_OFF;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Sensori_Temperatura({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            setstatosensore(valuedataRT.stato + \"°\");\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n    const aggiorna_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic =  \"/scsshield/device/\" + device.nome_attuatore + \"/request\";\r\n                clientMWTT.publish(topic, \" \")\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                <Col lg={8} style={{ alignSelf: \"center\" }}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\r\n                                        <Col lg={8}><b>{statosensore}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={aggiorna_button} >Aggiorna</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SENSORE-TEMPERATURA</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sensori_Temperatura;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Termostati({ device, valuedataRT, clientMWTT }) {\r\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\r\n    const [temp_termostato, settemp_termostato] = useState(\"--.-°\");\r\n    const [modalita_termostato, setmodalita_termostato] = useState(\"----\");\r\n //   const [temp_setting_termostato, set_temp_setting_termostato] = useState(10);\r\n\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n\r\n            var m = (valuedataRT.topic).split(\"/\");\r\n            if (m[4] != null) {\r\n                if (m[4].localeCompare(\"status\") == 0) {\r\n                    setstatosensore(valuedataRT.stato + \"°\");\r\n                } else if (m[4].localeCompare(\"temperatura_termostato_impostata\") == 0) {\r\n                    settemp_termostato(valuedataRT.stato);\r\n                   // set_temp_setting_termostato(valuedataRT.stato);\r\n                } else if (m[4].localeCompare(\"modalita_termostato_impostata\") == 0) {\r\n\t\t\t\t\tlet modalita = valuedataRT.stato;\r\n\t\t\t\t\tif (modalita.toLowerCase() === \"estate\") {\r\n\t\t\t\t\t\tsetmodalita_termostato(\"inverno\");\r\n\t\t\t\t\t} else if (modalita.toLowerCase() === \"inverno\") {\r\n\t\t\t\t\t\tsetmodalita_termostato(\"estate\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetmodalita_termostato(modalita);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n                }\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    const settemp_setting_termostato = (event) => {\r\n        settemp_termostato(event.target.value);\r\n    };\r\n\r\n    const send_settemp_setting_termostato = (event) => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_temp_termostato\";\r\n                clientMWTT.publish(topic, event.target.value)\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const estate_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'estate')\r\n            }\r\n        }\t\t\r\n\t\t\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'off')\r\n            }\r\n        }\r\n    };\r\n    const inverno_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'inverno')\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                <Col lg={2}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\r\n                                        <Col lg={8}><b>{statosensore}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Temp-Termostato</i></Col>\r\n                                        <Col lg={8}><b>{temp_termostato}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Modalita</i></Col>\r\n                                        <Col lg={8}><b>{modalita_termostato}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <Row >\r\n                                        <Col lg={6}><i>Set Temp</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"col-xs-1\">\r\n                                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" step=\"0.5\" value={temp_termostato} onChange={settemp_setting_termostato} onBlur={send_settemp_setting_termostato} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={estate_button}>CALDO</Button>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={off_button}>OFF</Button>\r\n                                        <Button size=\"md\" variant=\"outline-primary\" onClick={inverno_button}>FREDDO</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>TERMOSTATO</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Termostati;","import { useState, useEffect } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Serrande_Tapparelle({ device, valuedataRT, clientMWTT }) {\r\n\r\n    const [percentualeTapparelle, set_percentualeTapparelle] = useState(50);\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            set_percentualeTapparelle(valuedataRT.stato);\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    const update_percentuale = (event) => {\r\n        set_percentualeTapparelle(event.target.value);\r\n    };\r\n    const update_mqtt_serrande = (event) => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/percentuale\";\r\n                clientMWTT.publish(topic, percentualeTapparelle);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col sm={12}>\r\n                                    <Row >\r\n                                        <Col><i>Stato %</i></Col>\r\n                                        <Col lg={6}>\r\n                                            <RangeSlider tooltip='on' value={percentualeTapparelle} min=\"0\" max=\"100\" step=\"1\"  onChange={update_percentuale} onAfterChange={update_mqtt_serrande} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRANDE/TAPPARELLE</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Serrande_Tapparelle;","import { useState, useEffect } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\nfunction Dimmer({ device, valuedataRT, clientMWTT }) {\r\n\r\n    //Stato\r\n    const [statodimmerONOFF, setstatodimmerONOFF] = useState(\"lamp_disabilitata.svg\");\r\n    const [statodimmerPercent, setstatodimmerPercent] = useState(\"--%\");\r\n\r\n    //Comando\r\n    const [percentualeDimmer, set_percentualeDimmer] = useState(50);\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            var m = (valuedataRT.topic).split(\"/\");\r\n            if (m[5] != null) {\r\n                // Status percentuale\r\n                setstatodimmerPercent(valuedataRT.stato + \"%\");\r\n                set_percentualeDimmer(valuedataRT.stato);\r\n            } else {\r\n                // Status on/off\r\n                if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                    setstatodimmerONOFF(\"lamp_accesa.svg\");\r\n                } else {\r\n                    setstatodimmerONOFF(\"lamp_spenta.svg\");\r\n                }\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n    const update_percentuale = (event) => {\r\n        set_percentualeDimmer(event.target.value);\r\n    };\r\n    \r\n    // ✅ CORRETTA: invia SOLO la percentuale, non \"on\" prima\r\n    const update_mqtt_dimmer = () => {\r\n        if (clientMWTT && clientMWTT.connected) {\r\n            let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n            \r\n            // ✅ Invia solo la percentuale come stringa\r\n            clientMWTT.publish(topic, String(percentualeDimmer));\r\n            \r\n            console.log(`📤 Dimmer MQTT: ${device.nome_attuatore} → ${percentualeDimmer}%`);\r\n        }\r\n    };\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT && clientMWTT.connected) {\r\n            let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n            clientMWTT.publish(topic, \"on\");\r\n        }\r\n    };\r\n    \r\n    const t_button = () => {\r\n        if (clientMWTT && clientMWTT.connected) {\r\n            let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n            clientMWTT.publish(topic, \"t\");\r\n        }\r\n    };\r\n    \r\n    const off_button = () => {\r\n        if (clientMWTT && clientMWTT.connected) {\r\n            let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n            clientMWTT.publish(topic, \"off\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={4} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato Percentuale</i></Col>\r\n                                        <Col lg={8}><b>{statodimmerPercent}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statodimmerONOFF} style={{ width: \"32px\" }} alt=\"status\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <Row >\r\n                                        <Col lg={6}><i>Set Dimmer</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"col-xs-1\">\r\n                                                <RangeSlider \r\n                                                    tooltip='off' \r\n                                                    value={percentualeDimmer} \r\n                                                    min=\"10\" \r\n                                                    max=\"100\" \r\n                                                    step=\"10\" \r\n                                                    onChange={update_percentuale} \r\n                                                    onAfterChange={update_mqtt_dimmer} \r\n                                                />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>Dimmer</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dimmer;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Grupppi({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"lamp_accesa.svg\");\r\n            } else {\r\n                setstatoONOFF(\"lamp_spenta.svg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>GRUPPI</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Grupppi;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Serrature({ device, valuedataRT, clientMWTT }) {\r\n\r\n    const sblocca_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/sblocca\";\r\n                clientMWTT.publish(topic, \"sblocca\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n           <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    Posto Esterno: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i></i></Col>\r\n                                        <Col lg={8}>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={sblocca_button}>SBLOCCA</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRATURE</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Serrature;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Campanello_porta({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"bell_off.jpg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"bell_on.jpg\");\r\n            } else {\r\n                setstatoONOFF(\"bell_off.jpg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    return (\r\n        <>\r\n           <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    Citofono interno: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                                    <Row>\r\n                                        <Col lg={12}><i>Stato</i></Col>\r\n                                        <Col lg={12}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>CAMPANELLO</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Campanello_porta;","import React from \"react\";\r\nimport ON_OFF from \"./Switch\"\r\nimport Sensori_Temperatura from \"./Sensori_Temperatura\"\r\nimport Termostati from \"./Termostati\"\r\nimport Serrande_Tapparelle from \"./Serrande_Tapparelle\"\r\nimport Dimmer from \"./Dimmer\"\r\nimport Gruppi from \"./Gruppi\"\r\nimport Serrature from \"./Serrature\"\r\nimport Campanello_porta from \"./Campanello_porta\"\r\n\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Dispositivi({ device, mqttdata, clientMWTT }) {\r\n\r\n    if (device.tipo_attuatore === \"on_off\") {\r\n        return (\r\n            <>\r\n                <ON_OFF device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\r\n            </>\r\n        );\r\n    } else if (device.tipo_attuatore === \"sensori_temperatura\") {\r\n        return (\r\n            <>\r\n                <Sensori_Temperatura device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\r\n            </>\r\n        );\r\n    } else if (device.tipo_attuatore === \"termostati\") {\r\n        return (\r\n            <>\r\n                <Termostati device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"serrande_tapparelle\") {\r\n        return (\r\n            <>\r\n                <Serrande_Tapparelle device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"dimmer\") {\r\n        return (\r\n            <>\r\n                <Dimmer device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"gruppi\") {\r\n        return (\r\n            <>\r\n                <Gruppi device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"serrature\") {\r\n        return (\r\n            <>\r\n                <Serrature device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"campanello_porta\") {\r\n        return (\r\n            <>\r\n                <Campanello_porta device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Dispositivi;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Dispositivi from './Dispositivi';\r\nimport mqtt from \"mqtt\";\r\nimport \"./../App.css\";\r\n\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\nfunction Test() {\r\n  const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n  const [MqttClient, setMqttClient] = useState(null);\r\n  const [MQTT_data, setMQTT_data] = useState(\"\");\r\n  const [DebugSCSbus, setDebugSCSbus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let client = null;\r\n\r\n    const loadDevices = async () => {\r\n      const data = await fetch(ADDRESS_SERVER + \"GetConfigurazionereact.json\").then(r => r.json());\r\n      console.log(\"✅ Dispositivi caricati:\", data);\r\n      setListaDispositivi(data);\r\n      return data; // ✅ Ritorna i dati\r\n    };\r\n\r\n    const connectMqtt = async (devices) => {\r\n      // 1) prendi config dal backend\r\n      const cfg = await fetch(\"/mqtt_config.json\").then(r => r.json());\r\n      const host = window.location.hostname;\r\n      const proto = cfg.use_tls ? \"wss\" : \"ws\";\r\n      const url = `${proto}://${host}:${cfg.ws_port}${cfg.path || \"\"}`;\r\n\r\n      const options = { reconnectPeriod: 2000, clean: true };\r\n      if (cfg.username) options.username = cfg.username;\r\n      if (cfg.password) options.password = cfg.password;\r\n\r\n      console.log(\"MQTT url:\", url);\r\n      console.log(\"MQTT options:\", options);\r\n\r\n      // 2) connetti\r\n      client = mqtt.connect(url, options);\r\n      setMqttClient(client);\r\n\r\n      client.on(\"connect\", () => {\r\n        console.log(\"✅ MQTT connesso:\", url);\r\n\r\n        // ✅ Subscribe ai topic\r\n        client.subscribe(\"/scsshield/device/+/status\", (err) => {\r\n          if (err) console.error(\"Errore subscribe status:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/status\");\r\n        });\r\n        \r\n        client.subscribe(\"/scsshield/device/+/status/percentuale\", (err) => {\r\n          if (err) console.error(\"Errore subscribe percentuale:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/status/percentuale\");\r\n        });\r\n        \r\n        client.subscribe(\"/scsshield/device/+/modalita_termostato_impostata\", (err) => {\r\n          if (err) console.error(\"Errore subscribe modalita:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/modalita_termostato_impostata\");\r\n        });\r\n        \r\n        client.subscribe(\"/scsshield/device/+/temperatura_termostato_impostata\", (err) => {\r\n          if (err) console.error(\"Errore subscribe temperatura:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/temperatura_termostato_impostata\");\r\n        });\r\n      });\r\n\r\n      client.on(\"error\", (err) => {\r\n        console.error(\"❌ MQTT ERROR:\", err?.message || err);\r\n        try { client.end(); } catch {}\r\n      });\r\n\r\n      // ✅ Handler messaggi - usa 'devices' passato come parametro\r\n      client.on(\"message\", (topic, payload, packet) => {\r\n        console.log(\"📨 MQTT message received:\", topic);\r\n        \r\n        const data = new TextDecoder(\"utf-8\").decode(payload);\r\n        \r\n        if (topic === \"/scsshield/debug/bus\") {\r\n          setDebugSCSbus(prev => [...prev, data + '\\n']);\r\n        } else {\r\n          const parts = topic.split(\"/\");\r\n          \r\n          // ✅ Verifica struttura topic\r\n          if (parts.length < 4) {\r\n            console.warn(\"⚠️ Topic malformato:\", topic);\r\n            return;\r\n          }\r\n          \r\n          const deviceNameFromTopic = parts[3].toLowerCase(); // ✅ Lowercase\r\n          const mesg = data;\r\n          \r\n          console.log(\"  Device dal topic:\", deviceNameFromTopic);\r\n          console.log(\"  Messaggio:\", mesg);\r\n          \r\n          // ✅ Trova dispositivo corrispondente\r\n          const matchingDevice = devices.find(dev => \r\n            dev.nome_attuatore.toLowerCase() === deviceNameFromTopic\r\n          );\r\n          \r\n          if (matchingDevice) {\r\n            const dd = { \r\n              \"nome_attuatore\": matchingDevice.nome_attuatore,\r\n              \"stato\": mesg, \r\n              \"topic\": topic \r\n            };\r\n            setMQTT_data(dd);\r\n            console.log(\"✅ Match trovato:\", dd.nome_attuatore, \"stato:\", dd.stato);\r\n          } else {\r\n            console.warn(\"⚠️ Nessun dispositivo trovato per:\", deviceNameFromTopic);\r\n            console.log(\"  Dispositivi disponibili:\", devices.map(d => d.nome_attuatore.toLowerCase()));\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    // ✅ Carica dispositivi PRIMA, poi connetti MQTT passando i dispositivi\r\n    (async () => {\r\n      const devices = await loadDevices();\r\n      await connectMqtt(devices);\r\n    })();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      console.log(\"🔌 Chiusura connessioni MQTT...\");\r\n      \r\n      if (client) {\r\n        try {\r\n          client.unsubscribe(\"/scsshield/device/+/status\");\r\n          client.unsubscribe(\"/scsshield/device/+/status/percentuale\");\r\n          client.unsubscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\r\n          client.unsubscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\r\n          client.end();\r\n        } catch (e) {\r\n          console.error(\"Errore chiusura MQTT:\", e);\r\n        }\r\n      }\r\n    };\r\n  }, []); // ✅ Dipendenze vuote = esegue solo al mount\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        {lista_dispositivi.map((device, i) => (\r\n          <div key={i} style={{marginBottom:\"50px\"}}>\r\n            <Dispositivi device={device} mqttdata={MQTT_data} clientMWTT={MqttClient} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* Debug console (commentato) */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Sensore1({ device, handle_CHANHE_NOME, handle_CHANHE_A, handle_CHANHE_PL, handle_TIPO, handle_TIMER_UP, handle_TIMER_DOWN, handle_ELIMINA}) {\r\n    const [optionsStateTipoAttuatori, setoptionsStateTipoAttuatori] = useState(\"on_off\");\r\n    const [optionsStateTipoAttuatoriTIMER, setoptionsStateTipoAttuatoriTIMER] = useState(false);\r\n\r\n    const [nomeATTUATORE, setinomeATTUATORE] = useState(\"\");\r\n    const [indirizzo_A, setindirizzo_A] = useState(0);\r\n    const [indirizzo_PL, setindirizzo_PL] = useState(0);\r\n    const [TIMER_UP, setTIMER_UP] = useState(8000);\r\n    const [TIMER_DOWN, setTIMER_DOWN] = useState(8000);\r\n\r\n\r\n    useEffect(() => {\r\n        setoptionsStateTipoAttuatori(device.tipo_attuatore);\r\n        setindirizzo_A(device.indirizzo_Ambiente);\r\n        setindirizzo_PL(device.indirizzo_PL);\r\n        if ('timer_salita' in device)\r\n        {\r\n            setTIMER_UP(device.timer_salita);\r\n        }\r\n        if ('timer_discesa' in device)\r\n        {\r\n            setTIMER_DOWN(device.timer_discesa);\r\n        }\r\n\r\n        setinomeATTUATORE(device.nome_attuatore);\r\n\r\n        if(device.tipo_attuatore === \"serrande_tapparelle\"){\r\n            setoptionsStateTipoAttuatoriTIMER(true);\r\n        }else{\r\n            setoptionsStateTipoAttuatoriTIMER(false);\r\n        }\r\n    }, []);\r\n\r\n\r\n    //Option change , tipo attuatore\r\n    const handleoptionsStateTipoAttuatori = (event) =>{\r\n        setoptionsStateTipoAttuatori (event.target.value);\r\n        if(event.target.value === \"serrande_tapparelle\"){\r\n            setoptionsStateTipoAttuatoriTIMER(true);\r\n        }else{\r\n            setoptionsStateTipoAttuatoriTIMER(false);\r\n        }\r\n        handle_TIPO({nome_attuatore: device.nome_attuatore , tipo_attuatore : event.target.value});\r\n    }\r\n    //change , Indirizzo Ambiente\r\n    const handlChangeAMBIENTEind = (event) =>{\r\n        setindirizzo_A(event.target.value);\r\n        handle_CHANHE_A({nome_attuatore: device.nome_attuatore , indirizzo_Ambiente : event.target.value});\r\n    }\r\n    //change , Indirizzo Puno Luce\r\n    const handlChangePUNTOLUCEind = (event) =>{\r\n        setindirizzo_PL(event.target.value);\r\n        handle_CHANHE_PL({nome_attuatore: device.nome_attuatore , indirizzo_PL : event.target.value});\r\n    }\r\n    //change , Timer Salita [se esiste]\r\n    const handlChangeTIMER_UP = (event) =>{\r\n        setTIMER_UP(event.target.value);\r\n        handle_TIMER_UP({nome_attuatore: device.nome_attuatore , timer_salita : event.target.value});\r\n    }\r\n    //change , Timer Discesa [se esiste]\r\n    const handlChangeTIMER_DOWN = (event) =>{\r\n        setTIMER_DOWN(event.target.value);\r\n        handle_TIMER_DOWN({nome_attuatore: device.nome_attuatore , timer_discesa : event.target.value});\r\n    }\r\n    //change , NOME ATTUATORE [se esiste]\r\n\tconst handleChangeNOME_ATTUTATORE = (event) => {\r\n\t\t// ✅ Sostituisci spazi e caratteri speciali con underscore, forza lowercase\r\n\t\tlet valorePulito = event.target.value\r\n\t\t\t.toLowerCase()                           // Tutto minuscolo\r\n\t\t\t.replace(/\\s+/g, '_')                    // Spazi → underscore\r\n\t\t\t.replace(/[^a-z0-9_]/g, '_')             // Caratteri speciali → underscore\r\n\t\t\t.replace(/_+/g, '_');                    // Underscore multipli → singolo\r\n\t\t\r\n\t\tsetinomeATTUATORE(valorePulito);\r\n\t}\r\n\r\n\r\n\tconst handleChangeNOME_ATTUTATOREupdateDATABASE = (event) => {\r\n\t\t// ✅ Rimuovi underscore iniziali/finali prima di salvare\r\n\t\tconst nuovoNomeNormalizzato = nomeATTUATORE.trim().replace(/^_+|_+$/g, '');\r\n\t\t\r\n\t\thandle_CHANHE_NOME({\r\n\t\t\tnome_attuatore: device.nome_attuatore, \r\n\t\t\tnuovonome: nuovoNomeNormalizzato\r\n\t\t});\r\n\t}\r\n\r\n\r\n    //ELIMINA BUTTON\r\n    const handleELIMINA = () =>{\r\n        console.log(\"handleELIMINA\");\r\n        handle_ELIMINA({nome_attuatore: device.nome_attuatore});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const timer_salitadiscesa = () => {\r\n        return (\r\n            <>\r\n                <Col lg={3}>\r\n                    <Col >\r\n                        <Row >\r\n                            <Col ><i>Timer Salita [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                                <input className=\"form-control\" onChange={handlChangeTIMER_UP} min='1000'type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_UP}  />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col >\r\n                        <Row >\r\n                            <Col ><i>Timer Discesa [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                                <input className=\"form-control\" onChange={handlChangeTIMER_DOWN} min='1000' type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_DOWN} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    const Address_Campanello = () => {\r\n        //label = Citofono interno\r\n\r\n        return(\r\n            <>\r\n\r\n\r\n\r\n            </>\r\n        );\r\n\r\n    };\r\n\r\n\r\n    const Address_Select = () => {\r\n\r\n        if(optionsStateTipoAttuatori === \"campanello_porta\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Citofono interno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangePUNTOLUCEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"PuntoLuce\" step=\"1\" value={indirizzo_PL} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else if(optionsStateTipoAttuatori === \"serrature\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Posto Esterno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangeAMBIENTEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"Ambiente\" step=\"1\" value={indirizzo_A} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else{\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Ambiente</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangeAMBIENTEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"Ambiente\" step=\"1\" value={indirizzo_A} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i>Puno Luce</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangePUNTOLUCEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"PuntoLuce\" step=\"1\" value={indirizzo_PL} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col lg={4} style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <input type=\"text\" className=\"form-control\" value={nomeATTUATORE} onChange={handleChangeNOME_ATTUTATORE} onBlur={handleChangeNOME_ATTUTATOREupdateDATABASE} style={{ textTransform: 'lowercase' }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                {Address_Select()}\r\n\r\n                                <Col lg={optionsStateTipoAttuatoriTIMER ? 3 : 6} >\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Tipo Attuatore</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <select id=\"cars\" name=\"cars\" value={optionsStateTipoAttuatori} onChange={handleoptionsStateTipoAttuatori}>>\r\n                                                <option value=\"on_off\">ON/OFF</option>\r\n                                                <option value=\"dimmer\">Dimmer</option>\r\n                                                <option value=\"serrande_tapparelle\">Serrande/Tapparelle</option>\r\n                                                <option value=\"gruppi\">Gruppi</option>\r\n                                                <option value=\"sensori_temperatura\">Sensori Temperatura</option>\r\n                                                <option value=\"termostati\">Termostati</option>\r\n                                                <option value=\"serrature\">Serrature</option>\r\n                                                <option value=\"campanello_porta\">Campanello porta</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                {optionsStateTipoAttuatoriTIMER ? timer_salitadiscesa() : null}\r\n\r\n\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-danger\" onClick={handleELIMINA} >ELIMINA</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Sensore1;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport Sensore1 from \"./Sensore1\"\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction ConfigurazioneDispositivi({ device , handle_CHANHE_NOME, handle_CHANHE_A, handle_CHANHE_PL, handle_TIPO, handle_TIMER_UP, handle_TIMER_DOWN, handle_ELIMINA}) {\r\n\r\n    return (\r\n        <>\r\n            <Sensore1 device={device} handle_CHANHE_NOME={handle_CHANHE_NOME} handle_CHANHE_A={handle_CHANHE_A} \r\n                   handle_CHANHE_PL={handle_CHANHE_PL} handle_TIPO={handle_TIPO} handle_TIMER_UP={handle_TIMER_UP} handle_TIMER_DOWN={handle_TIMER_DOWN}\r\n                   handle_ELIMINA={handle_ELIMINA} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default ConfigurazioneDispositivi;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction AggiungiAttuatore({handel_AGIUNGInew} ) {\r\n    var timersalitadiscesa = false;\r\n\r\n    const [nomeATTUATORE, setinomeATTUATORE] = useState(\"\");\r\n    const [indirizzo_A, setindirizzo_A] = useState(0);\r\n    const [indirizzo_PL, setindirizzo_PL] = useState(0);\r\n\r\n    const [optionsStateTipoAttuatori, setoptionsStateTipoAttuatori] = useState(\"on_off\");\r\n    const [optionsStateTipoAttuatoriTIMER, setoptionsStateTipoAttuatoriTIMER] = useState(false);\r\n\r\n    const [TIMER_UP, setTIMER_UP] = useState(8000);\r\n    const [TIMER_DOWN, setTIMER_DOWN] = useState(8000);\r\n\r\n\r\n    //change , NOME ATTUATORE [se esiste]\r\n\tconst handleChangeNOME_ATTUTATORE = (event) => {\r\n\t\t// ✅ Sostituisci spazi e caratteri speciali con underscore, forza lowercase\r\n\t\tlet valorePulito = event.target.value\r\n\t\t\t.toLowerCase()                           // Tutto minuscolo\r\n\t\t\t.replace(/\\s+/g, '_')                    // Spazi → underscore\r\n\t\t\t.replace(/[^a-z0-9_]/g, '_')             // Caratteri speciali → underscore\r\n\t\t\t.replace(/_+/g, '_');                    // Underscore multipli → singolo\r\n\t\t\r\n\t\tsetinomeATTUATORE(valorePulito);\r\n\t}\r\n    const handleChangeNOME_ATTUTATOREupdateDATABASE = (event) =>{\r\n        //Qui ho il nome Attuatore Completo\r\n    }\r\n\r\n     //change , Indirizzo Ambiente\r\n     const handlChangeAMBIENTEind = (event) =>{\r\n        setindirizzo_A(event.target.value);\r\n    }\r\n    //change , Indirizzo Puno Luce\r\n    const handlChangePUNTOLUCEind = (event) =>{\r\n        setindirizzo_PL(event.target.value);\r\n    }\r\n\r\n    //Option change , tipo attuatore\r\n    const handleoptionsStateTipoAttuatori = (event) =>{\r\n\r\n        setoptionsStateTipoAttuatori (event.target.value);\r\n        if(event.target.value === \"serrande_tapparelle\"){\r\n            setoptionsStateTipoAttuatoriTIMER(true);\r\n        }else{\r\n            setoptionsStateTipoAttuatoriTIMER(false);\r\n        }\r\n    }\r\n    //change , Timer Salita [se esiste]\r\n    const handlChangeTIMER_UP = (event) =>{\r\n        setTIMER_UP(event.target.value);\r\n    }\r\n    //change , Timer Discesa [se esiste]\r\n    const handlChangeTIMER_DOWN = (event) =>{\r\n        setTIMER_DOWN(event.target.value);\r\n    }\r\n\r\n    //CLICK AGGIUNGI\r\n\tconst handlClickAGGIUNGI = (event) => {\r\n\t\t// ✅ Rimuovi underscore iniziali/finali\r\n\t\tconst nomeNormalizzato = nomeATTUATORE.trim().replace(/^_+|_+$/g, '');\r\n\r\n\t\tif(optionsStateTipoAttuatori === \"serrande_tapparelle\"){\r\n\t\t\thandel_AGIUNGInew({\r\n\t\t\t\tnome_attuatore: nomeNormalizzato, \r\n\t\t\t\tindirizzo_Ambiente: indirizzo_A,\r\n\t\t\t\tindirizzo_PL: indirizzo_PL, \r\n\t\t\t\ttipo_attuatore: optionsStateTipoAttuatori, \r\n\t\t\t\ttimer_salita: TIMER_UP, \r\n\t\t\t\ttimer_discesa: TIMER_DOWN\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\thandel_AGIUNGInew({\r\n\t\t\t\tnome_attuatore: nomeNormalizzato, \r\n\t\t\t\tindirizzo_Ambiente: indirizzo_A,\r\n\t\t\t\tindirizzo_PL: indirizzo_PL, \r\n\t\t\t\ttipo_attuatore: optionsStateTipoAttuatori\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetinomeATTUATORE(\"\");\r\n\t}\r\n\r\n\r\n\r\n    const timer_salitadiscesa = () => {\r\n        return (\r\n            <>\r\n                <Col lg={3}>\r\n                    <Col >\r\n                        <Row >\r\n                        <Col ><i>Timer Salita [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                                <input className=\"form-control\" onChange={handlChangeTIMER_UP} min='1000'type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_UP}  />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col >\r\n                        <Row >\r\n                        <Col ><i>Timer Discesa [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                            <input className=\"form-control\" onChange={handlChangeTIMER_DOWN} min='1000' type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_DOWN} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    const Address_Select = () => {\r\n\r\n        if(optionsStateTipoAttuatori === \"campanello_porta\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Citofono interno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_PL} onChange={handlChangePUNTOLUCEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else if(optionsStateTipoAttuatori === \"serrature\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Posto Esterno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_A} onChange={handlChangeAMBIENTEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else{\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Ambiente</i></Col>\r\n                            <Col lg={8}>\r\n                               <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_A} onChange={handlChangeAMBIENTEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i>Puno Luce</i></Col>\r\n                            <Col lg={8}>\r\n                               <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_PL} onChange={handlChangePUNTOLUCEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"2rem\" }}>\r\n            <hr></hr>\r\n\r\n            <div>\r\n                <h3>Aggiungi Attuatore</h3>\r\n            </div>\r\n            </Container>\r\n\r\n            <Container style={{ paddingTop: \"20px\", marginBottom:'100px' }} >\r\n                <Card  style={{ width: '100%', border: \"2px solid blue\" }}>\r\n                    <Card.Header className=\"bg-secondary \">\r\n                        <Row>\r\n                            <Col lg={4} style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <input type=\"text\" className=\"form-control\" value={nomeATTUATORE} placeholder=\"Inserisci il nome dell'Attuatore\" onChange={handleChangeNOME_ATTUTATORE} onBlur={handleChangeNOME_ATTUTATOREupdateDATABASE} style={{ textTransform: 'lowercase' }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n\r\n                                {Address_Select()}\r\n\r\n                                <Col lg={optionsStateTipoAttuatoriTIMER ? 3 : 6} >\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Tipo Attuatore</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <select name=\"tipiattuatori\" value={optionsStateTipoAttuatori} onChange={handleoptionsStateTipoAttuatori}> \r\n                                                <option value=\"on_off\">ON/OFF</option>\r\n                                                <option value=\"dimmer\">Dimmer</option>\r\n                                                <option value=\"serrande_tapparelle\">Serrande/Tapparelle</option>\r\n                                                <option value=\"gruppi\">Gruppi</option>\r\n                                                <option value=\"sensori_temperatura\">Sensori Temperatura</option>\r\n                                                <option value=\"termostati\">Termostati</option>\r\n                                                <option value=\"serrature\">Serrature</option>\r\n                                                <option value=\"campanello_porta\">Campanello porta</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                {optionsStateTipoAttuatoriTIMER ? timer_salitadiscesa() : null}\r\n\r\n\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" className=\"btn-primary\" onClick={handlClickAGGIUNGI} >AGGIUNGI</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default AggiungiAttuatore;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col, Modal } from 'react-bootstrap';\r\nimport ConfigurazioneDispositivi from \"./ConfigurazioneDispositivi\"\r\nimport AggiungiAttuatore from \"./AggiungiAttuatore\"\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction Configurazioni() {\r\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n\r\n    //pop up error\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [messaggio_da_visualizzare, setmessaggio_da_visualizzare] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        setListaDispositivi([]);\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    setListaDispositivi(data);\r\n                });\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (address, datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + address, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n    //AGGIORNA NEL DATABASE IL NOME ATTUATORE e nel HOOK ---->OK<----\r\n    const handle_CHANHE_NOME = (value) => {\r\n        //value.nome_attuatore\r\n        //value.nuovonome\r\n\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'nuovo_nome': value.nuovonome };\r\n        post_request_update_database('AGGIORNA_NOME_ATTUATORE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.nome_attuatore = value.nuovonome;\r\n    }\r\n\r\n    //AGGIORNA NEL DATABASE L'INDIRIZZO AMBIENTE e nel HOOK\r\n    const handle_CHANHE_A = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'indirizzo_Ambiente': value.indirizzo_Ambiente };\r\n        post_request_update_database('AGGIORNA_INDIRIZZO_A.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.indirizzo_Ambiente = value.indirizzo_Ambiente;\r\n    }\r\n    //AGGIORNA NEL DATABASE L'INDIRIZZO PL e nel HOOK\r\n    const handle_CHANHE_PL = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'indirizzo_PL': value.indirizzo_PL };\r\n        post_request_update_database('AGGIORNA_INDIRIZZO_PL.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.indirizzo_PL = value.indirizzo_PL;\r\n    }\r\n    //AGGIORNA NEL DATABASE IL TIPO ATTUATORE e nel HOOK\r\n    const handle_TIPO = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'tipo_attuatore': value.tipo_attuatore };\r\n        post_request_update_database('AGGIORNA_TIPO_ATTUATORE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.tipo_attuatore = value.tipo_attuatore;\r\n    }\r\n    //AGGIORNA NEL DATABASE TIMER SALITA e nel HOOK\r\n    const handle_TIMER_UP = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'timer_salita': value.timer_salita };\r\n        post_request_update_database('AGGIORNA_TIMER_SERRANDETAPPARELLE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.timer_salita = value.timer_salita;\r\n    }\r\n    //AGGIORNA NEL DATABASE TIMER DISCESA e nel HOOK\r\n    const handle_TIMER_DOWN = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'timer_discesa': value.timer_discesa };\r\n        post_request_update_database('AGGIORNA_TIMER_SERRANDETAPPARELLE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.timer_discesa = value.timer_discesa;\r\n    }\r\n    //AGGIORNA NEL DATABASE ***ELIMINA*** e nel HOOK\r\n    const handle_ELIMINA = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore };\r\n        post_request_update_database('RIMUOVI_ATTUATORE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var myArray = lista_dispositivi.filter(function (device) {\r\n            return device.nome_attuatore !== value.nome_attuatore;\r\n        });\r\n        setListaDispositivi(myArray);\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    //AGGIUNGI NUOVO ATTUATORE  \r\n    const handel_AGIUNGInew = (value) => {\r\n        if (value.nome_attuatore === '') {\r\n            setmessaggio_da_visualizzare(\"Il nome del nuovo Attuatore non può essere vuoto\");\r\n            handleShow();\r\n            //Pop up\r\n        } else {\r\n            //Controlla se esiste in \"lista_dispositivi\"\r\n            var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n            if (typeof attuatore === \"undefined\") {\r\n                //Ok inserisci nel database!!!\r\n\r\n                post_request_update_database('AGGIUNGI_ATTUATORE.json', value);\r\n\r\n                //Aggiungi in lista_dispositivi\r\n                setListaDispositivi(lista_dispositivi => [...lista_dispositivi, value]);\r\n            } else {\r\n                //ERROE c'è già --> \"POPUP\"\r\n                setmessaggio_da_visualizzare(\"Esiste già il nome dell'attuatore nel database\");\r\n                handleShow();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                {lista_dispositivi.map((device, i) => (\r\n                    <div key={device.nome_attuatore} >\r\n                        <ConfigurazioneDispositivi device={device} handle_CHANHE_NOME={handle_CHANHE_NOME}\r\n                            handle_CHANHE_A={handle_CHANHE_A} handle_CHANHE_PL={handle_CHANHE_PL}\r\n                            handle_TIPO={handle_TIPO} handle_TIMER_UP={handle_TIMER_UP} handle_TIMER_DOWN={handle_TIMER_DOWN}\r\n                            handle_ELIMINA={handle_ELIMINA} />\r\n                    </div>\r\n                ))}\r\n\r\n                <AggiungiAttuatore handel_AGIUNGInew={handel_AGIUNGInew} />\r\n\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Errore</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {messaggio_da_visualizzare}\r\n                  </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Ok\r\n                     </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Configurazioni;","import react from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport Test from '../Test/Test';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./../App.css\";\r\n\r\nfunction Homepage() {\r\n    let history = useHistory();\r\n\r\n    const handleClickConfigurazioni = () => {\r\n        history.push(\"configurazione.html\");\r\n    };\r\n    \r\n    const handleClickTest = () => {\r\n        history.push(\"test.html\");\r\n    };\r\n    \r\n    const handleClickNodeRed = () => {\r\n        history.push(\"noderedHome.html\");\r\n    };\r\n\r\n    const handleClickDatabase = () => {\r\n        history.push(\"database.html\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"justify-content-md-center\">\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">SCS-bus Raspberry shield</h1>\r\n                    <p className=\"lead\">Benvenuti nella pagina di configurazione dei dispositivi del Bus SCS e Test</p>\r\n                </div>\r\n\r\n                <div className=\"card-deck text-center\">\r\n                    {/* CARD CONFIGURAZIONE */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Attuatori on/off</li>\r\n                                <li>Dimmer</li>\r\n                                <li>Serrande/Tapparelle</li>\r\n                                <li>Gruppi</li>\r\n                                <li>Sensori Temperatura</li>\r\n                                <li>Termostati</li>\r\n                                <li>Serrature</li>\r\n                                <li>Campanello porta</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-primary mt-auto\" \r\n                                onClick={handleClickConfigurazioni}\r\n                            >\r\n                                Entra\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CARD TEST */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Test</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Attuatori on/off</li>\r\n                                <li>Dimmer</li>\r\n                                <li>Serrande/Tapparelle</li>\r\n                                <li>Gruppi</li>\r\n                                <li>Sensori Temperatura</li>\r\n                                <li>Termostati</li>\r\n                                <li>Serrature</li>\r\n                                <li>Campanello porta</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-primary mt-auto\" \r\n                                onClick={handleClickTest}\r\n                            >\r\n                                Entra\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CARD NODE-RED */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Node-RED</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>AWS IoTs</li>\r\n                                <li>Alexa virtual-smart-home</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-primary mt-auto\" \r\n                                onClick={handleClickNodeRed}\r\n                            >\r\n                                Entra\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CARD DATABASE */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h4 className=\"my-0 font-weight-normal\">🗄️ Database</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>💾 Backup automatico</li>\r\n                                <li>⬇️ Download database</li>\r\n                                <li>⬆️ Upload database</li>\r\n                                <li>🔄 Ripristino configurazione</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-success mt-auto\" \r\n                                onClick={handleClickDatabase}\r\n                            >\r\n                                Gestisci\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import React, { useState } from 'react';\r\nimport { Container, Card, Button, Alert, Spinner, Row, Col } from 'react-bootstrap';\r\n\r\nfunction DatabaseManager() {\r\n    const [uploading, setUploading] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n    const [messageType, setMessageType] = useState('info');\r\n\r\n    const showMessage = (text, type = 'info') => {\r\n        setMessage(text);\r\n        setMessageType(type);\r\n        setTimeout(() => setMessage(null), 5000);\r\n    };\r\n\r\n    const downloadDatabase = async () => {\r\n        try {\r\n            const response = await fetch('/download_database');\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Download failed');\r\n            }\r\n            \r\n            const blob = await response.blob();\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `scs_database_${new Date().toISOString().split('T')[0]}.json`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n            document.body.removeChild(a);\r\n            \r\n            showMessage('✅ Database scaricato con successo!', 'success');\r\n        } catch (error) {\r\n            console.error('Download error:', error);\r\n            showMessage(`❌ Errore download: ${error.message}`, 'danger');\r\n        }\r\n    };\r\n\r\n    const uploadDatabase = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        if (!file.name.endsWith('.json')) {\r\n            showMessage('❌ Seleziona un file JSON valido', 'danger');\r\n            event.target.value = null;\r\n            return;\r\n        }\r\n\r\n        setUploading(true);\r\n        showMessage('⏳ Caricamento database in corso...', 'info');\r\n\r\n        const formData = new FormData();\r\n        formData.append('database', file);\r\n\r\n        try {\r\n            const response = await fetch('/upload_database', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            const result = await response.json();\r\n            \r\n            if (response.ok) {\r\n                showMessage('✅ Database caricato! Ricaricamento pagina...', 'success');\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 2000);\r\n            } else {\r\n                showMessage(`❌ Errore: ${result.error}`, 'danger');\r\n            }\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n            showMessage(`❌ Errore upload: ${error.message}`, 'danger');\r\n        } finally {\r\n            setUploading(false);\r\n            event.target.value = null;\r\n        }\r\n    };\r\n\r\n    const createBackup = async () => {\r\n        try {\r\n            const response = await fetch('/backup_database', {\r\n                method: 'POST'\r\n            });\r\n            const result = await response.json();\r\n            \r\n            if (response.ok) {\r\n                showMessage(`✅ Backup creato: ${result.backup_file}`, 'success');\r\n            } else {\r\n                showMessage(`❌ Errore backup: ${result.error}`, 'danger');\r\n            }\r\n        } catch (error) {\r\n            console.error('Backup error:', error);\r\n            showMessage(`❌ Errore: ${error.message}`, 'danger');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={{ paddingTop: \"2rem\", paddingBottom: \"2rem\" }}>\r\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                <h1 className=\"display-4\">🗄️ Gestione Database</h1>\r\n                <p className=\"lead\">Backup, scarica e carica il database di configurazione</p>\r\n            </div>\r\n\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg={8}>\r\n                    <Card className=\"shadow-sm\">\r\n                        <Card.Header className=\"bg-primary text-white\">\r\n                            <h4 className=\"my-0\">Operazioni Database</h4>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {message && (\r\n                                <Alert variant={messageType} onClose={() => setMessage(null)} dismissible>\r\n                                    {message}\r\n                                </Alert>\r\n                            )}\r\n\r\n                            <div className=\"d-grid gap-3\">\r\n                                <Button\r\n                                    variant=\"success\"\r\n                                    size=\"lg\"\r\n                                    onClick={downloadDatabase}\r\n                                >\r\n                                    ⬇️ Scarica Database\r\n                                </Button>\r\n\r\n                                <div>\r\n                                    <label htmlFor=\"upload-db\" style={{ width: '100%' }}>\r\n                                        <Button\r\n                                            variant=\"primary\"\r\n                                            size=\"lg\"\r\n                                            as=\"span\"\r\n                                            disabled={uploading}\r\n                                            style={{ width: '100%' }}\r\n                                        >\r\n                                            {uploading ? (\r\n                                                <>\r\n                                                    <Spinner\r\n                                                        as=\"span\"\r\n                                                        animation=\"border\"\r\n                                                        size=\"sm\"\r\n                                                        role=\"status\"\r\n                                                        aria-hidden=\"true\"\r\n                                                        className=\"me-2\"\r\n                                                    />\r\n                                                    Caricamento...\r\n                                                </>\r\n                                            ) : (\r\n                                                '⬆️ Carica Database'\r\n                                            )}\r\n                                        </Button>\r\n                                    </label>\r\n                                    <input\r\n                                        id=\"upload-db\"\r\n                                        type=\"file\"\r\n                                        accept=\".json\"\r\n                                        onChange={uploadDatabase}\r\n                                        disabled={uploading}\r\n                                        style={{ display: 'none' }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Button\r\n                                    variant=\"warning\"\r\n                                    size=\"lg\"\r\n                                    onClick={createBackup}\r\n                                >\r\n                                    💾 Crea Backup Manuale\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <Alert variant=\"info\" className=\"mt-4 mb-0\">\r\n                                <strong>ℹ️ Informazioni:</strong>\r\n                                <ul className=\"mb-0 mt-2\" style={{ fontSize: '0.9rem' }}>\r\n                                    <li><strong>Scarica:</strong> Salva una copia del database sul tuo computer</li>\r\n                                    <li><strong>Carica:</strong> Sostituisce il database attuale (viene creato un backup automatico)</li>\r\n                                    <li><strong>Backup:</strong> Crea una copia di sicurezza in /data/backups/ (max 20 backup)</li>\r\n                                    <li>La pagina si ricaricherà automaticamente dopo il caricamento</li>\r\n                                </ul>\r\n                            </Alert>\r\n\r\n                            <Alert variant=\"warning\" className=\"mt-3 mb-0\">\r\n                                <strong>⚠️ Attenzione:</strong>\r\n                                <ul className=\"mb-0 mt-2\" style={{ fontSize: '0.9rem' }}>\r\n                                    <li>Il caricamento sostituisce completamente il database esistente</li>\r\n                                    <li>Assicurati che il file JSON sia valido prima di caricarlo</li>\r\n                                    <li>I dispositivi verranno ricaricati automaticamente</li>\r\n                                </ul>\r\n                            </Alert>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DatabaseManager;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedAlexa() {\r\n    //const [startNodered_enable, setstartNodered_enable] = useState(true);\r\n    const [stato_esporta, setstato_esporta] = useState(true);\r\n    const [stato_startNode, setstato_startNode] = useState(false);\r\n    const [link_nodered, setlink_nodered] = useState(\"\");\r\n\r\n    const [flow_anuale, setflow_anuale] = useState(\"\");\r\n    const textAreaRef = useRef(null);\r\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\r\n\r\n\r\n    const [secondu, setsecondu] = useState(30);\r\n    const [over, setover] = useState(false);\r\n    const [timerID, settimerID] = useState(null);\r\n\r\n    var second = 30;\r\n\r\n    useEffect(() => {\r\n        if (secondu === 0) {\r\n            clearTimeout(timerID);\r\n        }\r\n\r\n        return () => {\r\n            //console.log(\"returnnnnnn\");\r\n            // clearTimeout(timerID);\r\n        };\r\n    }, [secondu]);\r\n\r\n\r\n    const tick = () => {\r\n        console.log('tick ' + second);\r\n        if (second === 0) setover(true);\r\n        else {\r\n            console.log(second);\r\n            second = (second - 1);\r\n            setsecondu(second);\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handle_count = () => {\r\n        if (stato_startNode === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        if (secondu === 0) {\r\n            return (\r\n                <>\r\n                    <a href={link_nodered} target=\"_blank\">{link_nodered} </a>\r\n                </>\r\n            );\r\n        } else {\r\n            console.log(\"countdown \" + secondu);\r\n\r\n            return (\r\n                <>\r\n                    <p> Wait NodeRed start: {secondu} sec</p>\r\n                </>\r\n            );\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handle_Esporta = () => {\r\n        setstato_esporta(false);\r\n        var add = window.location.host.split(\":\");\r\n        setlink_nodered('http://' + add[0] + ':1880');\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Send_to_NodeRed.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                });\r\n        };\r\n        fetchData();\r\n        handle_startNodered();\r\n    };\r\n\r\n\r\n    const handle_startNodered = () => {\r\n\r\n        const t = setInterval(() => tick(), 1000);\r\n        settimerID(t);\r\n        //        clearTimeout(timerID);\r\n\r\n        setstato_startNode(true);\r\n\r\n    };\r\n\r\n\r\n    const handle_GeneraManuale = () => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Get_NodeRed_manual_flow.json')\r\n                .then(res => res.text())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    setflow_anuale(data);\r\n                });\r\n        };\r\n        fetchData();\r\n\r\n    };\r\n\r\n    const handle_codeflow_manuale = () => {\r\n        if (flow_anuale === '') {\r\n            return (\r\n                <>\r\n\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\r\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_CopyClipboard = (e) => {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        // This is just personal preference.\r\n        // I prefer to not show the whole text area selected.\r\n        e.target.focus();\r\n        setstato_startmanuale(true);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handle_codeflow_manuale_incolla = () => {\r\n        var add = window.location.host.split(\":\");\r\n        var add2 = ('http://' + add[0] + ':1880');\r\n        if (stato_startmanuale === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <ul style={{ listStyleType: 'none' }} >\r\n                    <li>Apri node-red</li>\r\n                    <li>Importa Flow</li>\r\n                    <li>Incolla il contenuto generato</li>\r\n                </ul>\r\n\r\n\r\n                <a href={add2} target=\"_blank\">{add2} </a>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Automatica</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Esporta auto-configurazione</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_Esporta} >1 - Esporta su Node-Red</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_count()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"card-deck text-center\"  >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Manuale</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Genera NodeRed Flow</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale()}\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale_incolla()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedAlexa;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedHome() {\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed AWS</h4>\r\n                        </div>\r\n                        <div>\r\n                            <p><i><small>Configurare prima AWS Server: <a href=\"http://scsshields.altervista.org/AWS_Skill_Bticino.html\" target=\"_blank\">Guida</a></small></i></p>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>                                    \r\n                                    <a href=\"/NoderedAlexaAWS.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"card-deck text-center\"  >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed \"virtual-smart-home\" library</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <a href=\"/noderedAlexa.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedHome;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NodeRedAWSDispositivi({ device }) {\r\n    // EndPoint\r\n    const [name_EndPoint, setname_EndPoint] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setname_EndPoint(device.nome_endpoint);\r\n    }, [device]);\r\n\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + 'SetDeviceEndPointAWS.json', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n        \r\n\r\n    //******************Device ENDPOINT******************\r\n    //change\r\n    const handleChangeAWSDeviceENDPOINT = (event) => {\r\n        setname_EndPoint(event.target.value);\r\n    }\r\n    const handleBlurAWSDeviceENDPOINT = (event) => {\r\n        //Qui ho il nome Attuatore Completo\r\n        //Update SERVER!\r\n        var datas = { 'nome_attuatore': device.nome_attuatore , 'nome_endpoint': event.target.value };\r\n        post_request_update_database(datas);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"text-primary text-center\">\r\n                    {device.nome_attuatore}\r\n                </Col>\r\n                <Col lg={6} className=\"text-center\">\r\n                </Col>\r\n                <Col>\r\n                    <input type=\"text\" className=\"form-control\" value={name_EndPoint} placeholder=\"Inserisci endpoint\" onChange={handleChangeAWSDeviceENDPOINT} onBlur={handleBlurAWSDeviceENDPOINT} />\r\n                </Col>\r\n            </Row>\r\n            <hr></hr>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NodeRedAWSDispositivi;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Form, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport NodeRedAWSDispositivi from \"./NodeRedAWSDispositivi\"\r\n\r\n\r\n\r\nimport \"./../App.css\";\r\n//https://www.pluralsight.com/guides/uploading-files-with-reactjs\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedAlexaAWS() {\r\n    //Indirizzo EndPoint\r\n    const [add_EndPoint, setadd_EndPoint] = useState(\"\");\r\n    //File name Certificati\r\n    const [FILE_private_key, setFILE_private_key] = useState(\"\");\r\n    const [FILE_cert_pem, setFILE_cert_pem] = useState(\"\");\r\n    const [FILE_root_CA, setFILE_root_CA] = useState(\"\");\r\n    //Dispositivi e ENDPOINT\r\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n\r\n    const [flow_anuale, setflow_anuale] = useState(\"\");\r\n    const textAreaRef = useRef(null);\r\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setListaDispositivi([]);\r\n\r\n        const fetchDataDispositivi = async () => {\r\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    setListaDispositivi(data);\r\n                });\r\n        };\r\n\r\n\r\n        fetchData();\r\n        fetchDataDispositivi();\r\n\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        await fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                setadd_EndPoint(data.EndPoint);\r\n                setFILE_private_key(data.PRIVATE_KEY);\r\n                setFILE_cert_pem(data.CERT_PEM);\r\n                setFILE_root_CA(data.CRT);\r\n            });\r\n    };\r\n\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n\r\n    const [selectedFile, setSelectedFile] = useState();\r\n\r\n    const changeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        //setIsSelected(true);\r\n    };\r\n\r\n    const handleSubmission = (tipo) => {\r\n        const formData = new FormData();\r\n        formData.append('File', selectedFile);\r\n        fetch(\r\n            ADDRESS_SERVER + 'AWSCertificatiploadHandler.html?tipo=' + tipo,\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log('Success:', result);\r\n                fetchData();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //******************Indirizzo ENDPOINT******************\r\n    //change\r\n    const handleChangeEndPoint = (event) => {\r\n        setadd_EndPoint(event.target.value);\r\n    }\r\n    const handleBlurEndPoint = (event) => {\r\n        //Qui ho il nome Attuatore Completo\r\n        //Update SERVER!\r\n        var datas = { 'EndPoint': event.target.value };\r\n        post_request_update_database(datas);\r\n    }\r\n\r\n\r\n\r\n    const handle_GeneraManuale = () => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Get_NodeRedAWS_manual_flow.json')\r\n                .then(res => res.text())\r\n                .then((data) => {\r\n                    setflow_anuale(data);\r\n                });\r\n        };\r\n        fetchData();\r\n\r\n    };\r\n    const handle_codeflow_manuale = () => {\r\n        if (flow_anuale === '') {\r\n            return (\r\n                <>\r\n\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\r\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_codeflow_manuale_incolla = () => {\r\n        var add = window.location.host.split(\":\");\r\n        var add2 = ('http://' + add[0] + ':1880');\r\n        if (stato_startmanuale === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <ul style={{ listStyleType: 'none' }} >\r\n                    <li>Apri node-red</li>\r\n                    <li>Importa Flow</li>\r\n                    <li>Incolla il contenuto generato</li>\r\n                </ul>\r\n\r\n\r\n                <a href={add2} target=\"_blank\">{add2} </a>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_CopyClipboard = (e) => {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        // This is just personal preference.\r\n        // I prefer to not show the whole text area selected.\r\n        e.target.focus();\r\n        setstato_startmanuale(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                <h1 className=\"display-5\">Configurazione AWS-IoT</h1>\r\n            </div>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        EndPoint\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                </Col>\r\n                                <Col lg={6} className=\"text-primary text-center\">\r\n                                    <input type=\"text\" className=\"form-control\" value={add_EndPoint} placeholder=\"Inserire indirizzo EndPoint AWS IoT\" onChange={handleChangeEndPoint} onBlur={handleBlurEndPoint} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Certificati AWS-IoT\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    PRIVATE_KEY\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_private_key}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem.key\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('PRIVATE_KEY')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    CERT_PEM\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_cert_pem}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem.crt\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('CERT_PEM')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    root-CA\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_root_CA}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem,.txt\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('root-CA')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Assegnazione endpoint AWS lambda ai Dispositivi\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n\r\n                                {lista_dispositivi.map((device, i) => (\r\n                                    <div key={i} className=\"container-fluid\">\r\n                                        <NodeRedAWSDispositivi device={device}  />\r\n                                    </div>\r\n                                ))}\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\", paddingBottom: '40px' }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Genera Flow NodeRed\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid className='text-center'>\r\n\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Genera NodeRed Flow</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale()}\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale_incolla()}\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedAlexaAWS;","import { useState, useEffect } from 'react';\r\nimport MYnavBar from './MYnavBar'\r\nimport Test from './Test/Test'\r\nimport Configurazione from './Configurazione/Configurazione'\r\nimport Homepage from './HomePage/Homepage'\r\nimport DatabaseManager from './Configurazione/DatabaseManager'\r\n\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport noderedAlexa from './NodeRedAlexa/NodeRedAlexa';\r\nimport noderedHome from './NodeRedAlexa/noderedHome';\r\nimport NoderedAlexaAWS from './NodeRedAlexa/noderedAlexaAWS';\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <MYnavBar />\r\n\r\n                <Route exact path=\"/\" component={Homepage}/>\r\n                <Route exact path=\"/configurazione.html\" component={Configurazione}/>\r\n                <Route exact path=\"/database.html\" component={DatabaseManager}/>\r\n                <Route exact path=\"/test.html\" component={Test}/>\r\n                <Route exact path=\"/noderedHome.html\" component={noderedHome}/>\r\n                <Route exact path=\"/noderedAlexa.html\" component={noderedAlexa}/>\r\n                <Route exact path=\"/NoderedAlexaAWS.html\" component={NoderedAlexaAWS}/>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}