{"version":3,"sources":["MYnavBar.js","Test/Switch.js","Test/Sensori_Temperatura.js","Test/Termostati.js","Test/Serrande_Tapparelle.js","Test/Dimmer.js","Test/Gruppi.js","Test/Serrature.js","Test/Campanello_porta.js","Test/Dispositivi.js","Test/Test.js","Configurazione/Sensore1.js","Configurazione/ConfigurazioneDispositivi.js","Configurazione/AggiungiAttuatore.js","Configurazione/Configurazione.js","HomePage/Homepage.js","NodeRedAlexa/NodeRedAlexa.js","NodeRedAlexa/noderedHome.js","NodeRedAlexa/NodeRedAWSDispositivi.js","NodeRedAlexa/noderedAlexaAWS.js","App.js","reportWebVitals.js","index.js"],"names":["MYnavBar","Container","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ON_OFF","device","valuedataRT","clientMWTT","useState","statoONOFF","setstatoONOFF","useEffect","nome_attuatore","stato","localeCompare","style","paddingTop","Card","width","border","Header","Row","Col","textAlign","fontSize","marginRight","indirizzo_Ambiente","indirizzo_PL","Body","fluid","lg","data-icon","src","alignSelf","alignItems","type","onClick","connected","topic","publish","Footer","margin","padding","Sensori_Temperatura","statosensore","setstatosensore","Button","size","variant","Termostati","temp_termostato","settemp_termostato","modalita_termostato","setmodalita_termostato","m","split","name","step","value","onChange","event","target","onBlur","Serrande_Tapparelle","percentualeTapparelle","set_percentualeTapparelle","sm","tooltip","min","max","onAfterChange","Dimmer","statodimmerONOFF","setstatodimmerONOFF","statodimmerPercent","setstatodimmerPercent","percentualeDimmer","set_percentualeDimmer","Grupppi","Serrature","Campanello_porta","Dispositivi","mqttdata","tipo_attuatore","Gruppi","Test","lista_dispositivi","setListaDispositivi","MqttClient","setMqttClient","MQTT_data","setMQTT_data","setDebugSCSbus","client","loadDevices","a","fetch","ADDRESS_SERVER","then","r","json","data","connectMqtt","cfg","host","window","location","hostname","proto","use_tls","url","ws_port","path","options","reconnectPeriod","clean","username","password","console","log","mqtt","connect","on","subscribe","err","error","message","end","payload","packet","TextDecoder","decode","DebugSCSbus","dd","unsubscribe","map","i","marginBottom","Sensore1","handle_CHANHE_NOME","handle_CHANHE_A","handle_CHANHE_PL","handle_TIPO","handle_TIMER_UP","handle_TIMER_DOWN","handle_ELIMINA","optionsStateTipoAttuatori","setoptionsStateTipoAttuatori","optionsStateTipoAttuatoriTIMER","setoptionsStateTipoAttuatoriTIMER","nomeATTUATORE","setinomeATTUATORE","indirizzo_A","setindirizzo_A","setindirizzo_PL","TIMER_UP","setTIMER_UP","TIMER_DOWN","setTIMER_DOWN","timer_salita","timer_discesa","handlChangeAMBIENTEind","handlChangePUNTOLUCEind","handlChangeTIMER_UP","handlChangeTIMER_DOWN","nuovonome","ConfigurazioneDispositivi","AggiungiAttuatore","handel_AGIUNGInew","placeholder","Configurazioni","show","setShow","handleClose","handleShow","messaggio_da_visualizzare","setmessaggio_da_visualizzare","res","fetchData","post_request_update_database","address","datas","JSON","stringify","method","headers","body","response","find","myArray","filter","Modal","onHide","backdrop","keyboard","closeButton","Title","Homepage","history","useHistory","push","class","NoderedAlexa","setstato_esporta","stato_startNode","setstato_startNode","link_nodered","setlink_nodered","flow_anuale","setflow_anuale","textAreaRef","useRef","stato_startmanuale","setstato_startmanuale","secondu","setsecondu","setover","timerID","settimerID","second","clearTimeout","handle_startNodered","t","setInterval","handle_CopyClipboard","e","current","select","document","execCommand","focus","color","add","marginTop","text","Form","Control","as","rows","readonly","ref","add2","listStyleType","handle_codeflow_manuale_incolla","NoderedHome","NodeRedAWSDispositivi","name_EndPoint","setname_EndPoint","nome_endpoint","NoderedAlexaAWS","add_EndPoint","setadd_EndPoint","FILE_private_key","setFILE_private_key","FILE_cert_pem","setFILE_cert_pem","FILE_root_CA","setFILE_root_CA","fetchDataDispositivi","EndPoint","PRIVATE_KEY","CERT_PEM","CRT","selectedFile","setSelectedFile","changeHandler","files","handleSubmission","tipo","formData","FormData","append","result","catch","accept","paddingBottom","App","exact","component","Configurazione","noderedHome","noderedAlexa","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6fdce16.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./App.css\"\r\n\r\n\r\n\r\nfunction MYnavBar() {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"\">SCSshield</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/\">Home</Nav.Link>\r\n                            <Nav.Link href=\"configurazione.html\">Configurazioni</Nav.Link>\r\n                            <Nav.Link href=\"test.html\">Test</Nav.Link>\r\n                            <Nav.Link href=\"noderedHome.html\">Node-Red</Nav.Link>                           \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default MYnavBar;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\nfunction ON_OFF({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"lamp_accesa.svg\");\r\n            } else {\r\n                setstatoONOFF(\"lamp_spenta.svg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>ON/OFF</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ON_OFF;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Sensori_Temperatura({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            setstatosensore(valuedataRT.stato + \"°\");\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n    const aggiorna_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic =  \"/scsshield/device/\" + device.nome_attuatore + \"/request\";\r\n                clientMWTT.publish(topic, \" \")\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                <Col lg={8} style={{ alignSelf: \"center\" }}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\r\n                                        <Col lg={8}><b>{statosensore}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={aggiorna_button} >Aggiorna</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SENSORE-TEMPERATURA</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sensori_Temperatura;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Termostati({ device, valuedataRT, clientMWTT }) {\r\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\r\n    const [temp_termostato, settemp_termostato] = useState(\"--.-°\");\r\n    const [modalita_termostato, setmodalita_termostato] = useState(\"----\");\r\n //   const [temp_setting_termostato, set_temp_setting_termostato] = useState(10);\r\n\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n\r\n            var m = (valuedataRT.topic).split(\"/\");\r\n            if (m[4] != null) {\r\n                if (m[4].localeCompare(\"status\") == 0) {\r\n                    setstatosensore(valuedataRT.stato + \"°\");\r\n                } else if (m[4].localeCompare(\"temperatura_termostato_impostata\") == 0) {\r\n                    settemp_termostato(valuedataRT.stato);\r\n                   // set_temp_setting_termostato(valuedataRT.stato);\r\n                } else if (m[4].localeCompare(\"modalita_termostato_impostata\") == 0) {\r\n                    setmodalita_termostato(valuedataRT.stato);\r\n                }\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    const settemp_setting_termostato = (event) => {\r\n        settemp_termostato(event.target.value);\r\n    };\r\n\r\n    const send_settemp_setting_termostato = (event) => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_temp_termostato\";\r\n                clientMWTT.publish(topic, event.target.value)\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const estate_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'estate')\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'off')\r\n            }\r\n        }\r\n    };\r\n    const inverno_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'inverno')\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                <Col lg={2}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\r\n                                        <Col lg={8}><b>{statosensore}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Temp-Termostato</i></Col>\r\n                                        <Col lg={8}><b>{temp_termostato}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Modalita</i></Col>\r\n                                        <Col lg={8}><b>{modalita_termostato}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <Row >\r\n                                        <Col lg={6}><i>Set Temp</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"col-xs-1\">\r\n                                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" step=\"0.5\" value={temp_termostato} onChange={settemp_setting_termostato} onBlur={send_settemp_setting_termostato} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={estate_button}>CALDO</Button>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={off_button}>OFF</Button>\r\n                                        <Button size=\"md\" variant=\"outline-primary\" onClick={inverno_button}>FREDDO</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>TERMOSTATO</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Termostati;","import { useState, useEffect } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Serrande_Tapparelle({ device, valuedataRT, clientMWTT }) {\r\n\r\n    const [percentualeTapparelle, set_percentualeTapparelle] = useState(50);\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            set_percentualeTapparelle(valuedataRT.stato);\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    const update_percentuale = (event) => {\r\n        set_percentualeTapparelle(event.target.value);\r\n    };\r\n    const update_mqtt_serrande = (event) => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/percentuale\";\r\n                clientMWTT.publish(topic, percentualeTapparelle);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col sm={12}>\r\n                                    <Row >\r\n                                        <Col><i>Stato %</i></Col>\r\n                                        <Col lg={6}>\r\n                                            <RangeSlider tooltip='on' value={percentualeTapparelle} min=\"0\" max=\"100\" step=\"1\"  onChange={update_percentuale} onAfterChange={update_mqtt_serrande} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRANDE/TAPPARELLE</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Serrande_Tapparelle;","import { useState, useEffect } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Dimmer({ device, valuedataRT, clientMWTT }) {\r\n\r\n    //Stato\r\n    const [statodimmerONOFF, setstatodimmerONOFF] = useState(\"lamp_disabilitata.svg\");\r\n    const [statodimmerPercent, setstatodimmerPercent] = useState(\"--%\");\r\n\r\n    //Comando\r\n    const [percentualeDimmer, set_percentualeDimmer] = useState(50);\r\n\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            var m = (valuedataRT.topic).split(\"/\");\r\n            if (m[5] != null) {\r\n                setstatodimmerPercent(valuedataRT.stato + \"%\");\r\n                set_percentualeDimmer(valuedataRT.stato);\r\n            } else {\r\n                if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                    setstatodimmerONOFF(\"lamp_accesa.svg\");\r\n                } else {\r\n                    setstatodimmerONOFF(\"lamp_spenta.svg\");\r\n                }\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n    const update_percentuale = (event) => {\r\n        setstatodimmerPercent(valuedataRT.stato + \"%\");\r\n        set_percentualeDimmer(event.target.value);\r\n    };\r\n    const update_mqtt_dimmer = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"on\");\r\n\r\n                topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, percentualeDimmer);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={4} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato Percentuale\t</i></Col>\r\n                                        <Col lg={8}><b>{statodimmerPercent}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statodimmerONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <Row >\r\n                                        <Col lg={6}><i>Set Dimmer</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"col-xs-1\">\r\n                                                <RangeSlider tooltip='off' value={percentualeDimmer} min=\"10\" max=\"100\" step=\"10\" onChange={update_percentuale} onAfterChange={update_mqtt_dimmer} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>Dimmer</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Dimmer;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Grupppi({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"lamp_accesa.svg\");\r\n            } else {\r\n                setstatoONOFF(\"lamp_spenta.svg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>GRUPPI</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Grupppi;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Serrature({ device, valuedataRT, clientMWTT }) {\r\n\r\n    const sblocca_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/sblocca\";\r\n                clientMWTT.publish(topic, \"sblocca\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n           <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    Posto Esterno: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i></i></Col>\r\n                                        <Col lg={8}>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={sblocca_button}>SBLOCCA</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRATURE</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Serrature;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Campanello_porta({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"bell_off.jpg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"bell_on.jpg\");\r\n            } else {\r\n                setstatoONOFF(\"bell_off.jpg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    return (\r\n        <>\r\n           <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    Citofono interno: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                                    <Row>\r\n                                        <Col lg={12}><i>Stato</i></Col>\r\n                                        <Col lg={12}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>CAMPANELLO</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Campanello_porta;","import React from \"react\";\r\nimport ON_OFF from \"./Switch\"\r\nimport Sensori_Temperatura from \"./Sensori_Temperatura\"\r\nimport Termostati from \"./Termostati\"\r\nimport Serrande_Tapparelle from \"./Serrande_Tapparelle\"\r\nimport Dimmer from \"./Dimmer\"\r\nimport Gruppi from \"./Gruppi\"\r\nimport Serrature from \"./Serrature\"\r\nimport Campanello_porta from \"./Campanello_porta\"\r\n\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Dispositivi({ device, mqttdata, clientMWTT }) {\r\n\r\n    if (device.tipo_attuatore === \"on_off\") {\r\n        return (\r\n            <>\r\n                <ON_OFF device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\r\n            </>\r\n        );\r\n    } else if (device.tipo_attuatore === \"sensori_temperatura\") {\r\n        return (\r\n            <>\r\n                <Sensori_Temperatura device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\r\n            </>\r\n        );\r\n    } else if (device.tipo_attuatore === \"termostati\") {\r\n        return (\r\n            <>\r\n                <Termostati device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"serrande_tapparelle\") {\r\n        return (\r\n            <>\r\n                <Serrande_Tapparelle device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"dimmer\") {\r\n        return (\r\n            <>\r\n                <Dimmer device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"gruppi\") {\r\n        return (\r\n            <>\r\n                <Gruppi device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"serrature\") {\r\n        return (\r\n            <>\r\n                <Serrature device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"campanello_porta\") {\r\n        return (\r\n            <>\r\n                <Campanello_porta device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Dispositivi;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Dispositivi from './Dispositivi';\r\nimport mqtt from \"mqtt\";\r\nimport \"./../App.css\";\r\n\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\nfunction Test() {\r\n  const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n  const [MqttClient, setMqttClient] = useState([]);\r\n  const [MQTT_data, setMQTT_data] = useState(\"\");\r\n  const [DebugSCSbus, setDebugSCSbus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let client = null;\r\n\r\n    const loadDevices = async () => {\r\n      const data = await fetch(ADDRESS_SERVER + \"GetConfigurazionereact.json\").then(r => r.json());\r\n      setListaDispositivi(data);\r\n    };\r\n\r\n    const connectMqtt = async () => {\r\n      // 1) prendi config dal backend\r\n      const cfg = await fetch(\"/mqtt_config.json\").then(r => r.json());\r\n      const host = window.location.hostname;                 // es. homeassistant.local\r\n      const proto = cfg.use_tls ? \"wss\" : \"ws\";\r\n      const url = `${proto}://${host}:${cfg.ws_port}${cfg.path || \"\"}`;\r\n\r\n      const options = { reconnectPeriod: 2000, clean: true };\r\n      if (cfg.username) options.username = cfg.username;\r\n      if (cfg.password) options.password = cfg.password;\r\n\r\n      console.log(\"MQTT url..............:\", url);\r\n      console.log(\"options:\", options);\r\n\r\n      // 2) connetti\r\n      client = mqtt.connect(url, options);\r\n      setMqttClient(client);\r\n\r\n      client.on(\"connect\", () => {\r\n        console.log(\"MQTT Connesso....ok!\");        \r\n        client.publish(\"ciao\",\"ciaooooooooooooooooooo1\");\r\n        client.publish(\"ciao\",\"ciaooooooooooooooooooo2\");\r\n        client.publish(\"ciao\",\"ciaooooooooooooooooooo3\");\r\n        client.publish(\"ciao\",\"ciaooooooooooooooooooo4\");\r\n        client.publish(\"ciao\",\"ciaooooooooooooooooooo5\");\r\n\r\n        console.log(\"✅ MQTT connesso:\", url);\r\n\r\n\r\n        client.subscribe(\"/scsshield/device/+/status\");\r\n        client.subscribe(\"/scsshield/device/+/status/percentuale\");\r\n        client.subscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\r\n        client.subscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\r\n          // _client.subscribe(\"/scsshield/debug/bus\");\r\n      });\r\n\r\n      client.on(\"error\", (err) => {\r\n        console.error(\"MQTT ERROR:\", err?.message || err);\r\n        try { client.end(); } catch {}\r\n      });\r\n\r\n      client.on(\"message\", (topic, payload, packet) => {\r\n        const data = new TextDecoder(\"utf-8\").decode(payload);\r\n        if (topic.localeCompare(\"/scsshield/debug/bus\") == 0) {\r\n            setDebugSCSbus(DebugSCSbus => [...DebugSCSbus, data + '\\n']);\r\n        } else {\r\n            var m = (topic).split(\"/\");\r\n            var nomeDevice = m[3];\r\n            var mesg = (data)   //.toLowerCase();\r\n            const dd = { \"nome_attuatore\": nomeDevice, \"stato\": mesg, \"topic\": topic };\r\n            setMQTT_data(dd);\r\n            console.log(dd.nome_attuatore);\r\n            console.log(dd.stato);\r\n        }\r\n      });\r\n    };\r\n\r\n    (async () => {\r\n      await loadDevices();\r\n      await connectMqtt();\r\n    })();\r\n\r\n\r\n    return () => {\r\n        console.log(\"CLOSEEE\");\r\n        setListaDispositivi([]);\r\n\r\n        client.unsubscribe(\"/scsshield/device/+/status\");\r\n        client.unsubscribe(\"/scsshield/device/+/status/percentuale\");\r\n        client.unsubscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\r\n        client.unsubscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\r\n        client.end();\r\n        //MqttClient.close();\r\n        // cleaning up the listeners here\r\n    }\r\n  }, []);\r\n\r\n return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                {lista_dispositivi.map((device, i) => (\r\n                    <div key={i} style={{marginBottom:\"50px\"}} >\r\n                        <Dispositivi device={device} mqttdata={MQTT_data} clientMWTT={MqttClient} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {\r\n            /*<div className=\"DebugSCSbus\" style={{ textAlign: \"center\" }}>\r\n                <textarea style={{ width: \"80%\" }} value={DebugSCSbus} rows={12} cols={50} name=\"Debug Bus\" placeholder='' />\r\n            </div>\r\n            */\r\n            }\r\n        </>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Test;\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Sensore1({ device, handle_CHANHE_NOME, handle_CHANHE_A, handle_CHANHE_PL, handle_TIPO, handle_TIMER_UP, handle_TIMER_DOWN, handle_ELIMINA}) {\r\n    const [optionsStateTipoAttuatori, setoptionsStateTipoAttuatori] = useState(\"on_off\");\r\n    const [optionsStateTipoAttuatoriTIMER, setoptionsStateTipoAttuatoriTIMER] = useState(false);\r\n\r\n    const [nomeATTUATORE, setinomeATTUATORE] = useState(\"\");\r\n    const [indirizzo_A, setindirizzo_A] = useState(0);\r\n    const [indirizzo_PL, setindirizzo_PL] = useState(0);\r\n    const [TIMER_UP, setTIMER_UP] = useState(8000);\r\n    const [TIMER_DOWN, setTIMER_DOWN] = useState(8000);\r\n\r\n\r\n    useEffect(() => {\r\n        setoptionsStateTipoAttuatori(device.tipo_attuatore);\r\n        setindirizzo_A(device.indirizzo_Ambiente);\r\n        setindirizzo_PL(device.indirizzo_PL);\r\n        if ('timer_salita' in device)\r\n        {\r\n            setTIMER_UP(device.timer_salita);\r\n        }\r\n        if ('timer_discesa' in device)\r\n        {\r\n            setTIMER_DOWN(device.timer_discesa);\r\n        }\r\n\r\n        setinomeATTUATORE(device.nome_attuatore);\r\n\r\n        if(device.tipo_attuatore === \"serrande_tapparelle\"){\r\n            setoptionsStateTipoAttuatoriTIMER(true);\r\n        }else{\r\n            setoptionsStateTipoAttuatoriTIMER(false);\r\n        }\r\n    }, []);\r\n\r\n\r\n    //Option change , tipo attuatore\r\n    const handleoptionsStateTipoAttuatori = (event) =>{\r\n        setoptionsStateTipoAttuatori (event.target.value);\r\n        if(event.target.value === \"serrande_tapparelle\"){\r\n            setoptionsStateTipoAttuatoriTIMER(true);\r\n        }else{\r\n            setoptionsStateTipoAttuatoriTIMER(false);\r\n        }\r\n        handle_TIPO({nome_attuatore: device.nome_attuatore , tipo_attuatore : event.target.value});\r\n    }\r\n    //change , Indirizzo Ambiente\r\n    const handlChangeAMBIENTEind = (event) =>{\r\n        setindirizzo_A(event.target.value);\r\n        handle_CHANHE_A({nome_attuatore: device.nome_attuatore , indirizzo_Ambiente : event.target.value});\r\n    }\r\n    //change , Indirizzo Puno Luce\r\n    const handlChangePUNTOLUCEind = (event) =>{\r\n        setindirizzo_PL(event.target.value);\r\n        handle_CHANHE_PL({nome_attuatore: device.nome_attuatore , indirizzo_PL : event.target.value});\r\n    }\r\n    //change , Timer Salita [se esiste]\r\n    const handlChangeTIMER_UP = (event) =>{\r\n        setTIMER_UP(event.target.value);\r\n        handle_TIMER_UP({nome_attuatore: device.nome_attuatore , timer_salita : event.target.value});\r\n    }\r\n    //change , Timer Discesa [se esiste]\r\n    const handlChangeTIMER_DOWN = (event) =>{\r\n        setTIMER_DOWN(event.target.value);\r\n        handle_TIMER_DOWN({nome_attuatore: device.nome_attuatore , timer_discesa : event.target.value});\r\n    }\r\n    //change , NOME ATTUATORE [se esiste]\r\n    const handleChangeNOME_ATTUTATORE = (event) =>{\r\n        setinomeATTUATORE(event.target.value);\r\n    }\r\n\r\n    const handleChangeNOME_ATTUTATOREupdateDATABASE = (event) =>{\r\n        console.log(\"QUI CAMBIO IL NOME ATTUATORRE\");\r\n        handle_CHANHE_NOME({nome_attuatore: device.nome_attuatore , nuovonome : nomeATTUATORE});\r\n    }\r\n\r\n\r\n    //ELIMINA BUTTON\r\n    const handleELIMINA = () =>{\r\n        console.log(\"handleELIMINA\");\r\n        handle_ELIMINA({nome_attuatore: device.nome_attuatore});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const timer_salitadiscesa = () => {\r\n        return (\r\n            <>\r\n                <Col lg={3}>\r\n                    <Col >\r\n                        <Row >\r\n                            <Col ><i>Timer Salita [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                                <input className=\"form-control\" onChange={handlChangeTIMER_UP} min='1000'type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_UP}  />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col >\r\n                        <Row >\r\n                            <Col ><i>Timer Discesa [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                                <input className=\"form-control\" onChange={handlChangeTIMER_DOWN} min='1000' type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_DOWN} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    const Address_Campanello = () => {\r\n        //label = Citofono interno\r\n\r\n        return(\r\n            <>\r\n\r\n\r\n\r\n            </>\r\n        );\r\n\r\n    };\r\n\r\n\r\n    const Address_Select = () => {\r\n\r\n        if(optionsStateTipoAttuatori === \"campanello_porta\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Citofono interno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangePUNTOLUCEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"PuntoLuce\" step=\"1\" value={indirizzo_PL} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else if(optionsStateTipoAttuatori === \"serrature\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Posto Esterno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangeAMBIENTEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"Ambiente\" step=\"1\" value={indirizzo_A} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else{\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Ambiente</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangeAMBIENTEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"Ambiente\" step=\"1\" value={indirizzo_A} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i>Puno Luce</i></Col>\r\n                            <Col lg={8}>\r\n                                <input onChange={handlChangePUNTOLUCEind} className=\"form-control\" style={{ width: \"90%\" }} min='0' max='9' type=\"number\" name=\"PuntoLuce\" step=\"1\" value={indirizzo_PL} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col lg={4} style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <input type=\"text\" className=\"form-control\" value={nomeATTUATORE} onChange={handleChangeNOME_ATTUTATORE} onBlur={handleChangeNOME_ATTUTATOREupdateDATABASE} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                {Address_Select()}\r\n\r\n                                <Col lg={optionsStateTipoAttuatoriTIMER ? 3 : 6} >\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Tipo Attuatore</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <select id=\"cars\" name=\"cars\" value={optionsStateTipoAttuatori} onChange={handleoptionsStateTipoAttuatori}>>\r\n                                                <option value=\"on_off\">ON/OFF</option>\r\n                                                <option value=\"dimmer\">Dimmer</option>\r\n                                                <option value=\"serrande_tapparelle\">Serrande/Tapparelle</option>\r\n                                                <option value=\"gruppi\">Gruppi</option>\r\n                                                <option value=\"sensori_temperatura\">Sensori Temperatura</option>\r\n                                                <option value=\"termostati\">Termostati</option>\r\n                                                <option value=\"serrature\">Serrature</option>\r\n                                                <option value=\"campanello_porta\">Campanello porta</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                {optionsStateTipoAttuatoriTIMER ? timer_salitadiscesa() : null}\r\n\r\n\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-danger\" onClick={handleELIMINA} >ELIMINA</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Sensore1;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport Sensore1 from \"./Sensore1\"\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction ConfigurazioneDispositivi({ device , handle_CHANHE_NOME, handle_CHANHE_A, handle_CHANHE_PL, handle_TIPO, handle_TIMER_UP, handle_TIMER_DOWN, handle_ELIMINA}) {\r\n\r\n    return (\r\n        <>\r\n            <Sensore1 device={device} handle_CHANHE_NOME={handle_CHANHE_NOME} handle_CHANHE_A={handle_CHANHE_A} \r\n                   handle_CHANHE_PL={handle_CHANHE_PL} handle_TIPO={handle_TIPO} handle_TIMER_UP={handle_TIMER_UP} handle_TIMER_DOWN={handle_TIMER_DOWN}\r\n                   handle_ELIMINA={handle_ELIMINA} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default ConfigurazioneDispositivi;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction AggiungiAttuatore({handel_AGIUNGInew} ) {\r\n    var timersalitadiscesa = false;\r\n\r\n    const [nomeATTUATORE, setinomeATTUATORE] = useState(\"\");\r\n    const [indirizzo_A, setindirizzo_A] = useState(0);\r\n    const [indirizzo_PL, setindirizzo_PL] = useState(0);\r\n\r\n    const [optionsStateTipoAttuatori, setoptionsStateTipoAttuatori] = useState(\"on_off\");\r\n    const [optionsStateTipoAttuatoriTIMER, setoptionsStateTipoAttuatoriTIMER] = useState(false);\r\n\r\n    const [TIMER_UP, setTIMER_UP] = useState(8000);\r\n    const [TIMER_DOWN, setTIMER_DOWN] = useState(8000);\r\n\r\n\r\n    //change , NOME ATTUATORE [se esiste]\r\n    const handleChangeNOME_ATTUTATORE = (event) =>{\r\n        setinomeATTUATORE(event.target.value);\r\n    }\r\n    const handleChangeNOME_ATTUTATOREupdateDATABASE = (event) =>{\r\n        //Qui ho il nome Attuatore Completo\r\n    }\r\n\r\n     //change , Indirizzo Ambiente\r\n     const handlChangeAMBIENTEind = (event) =>{\r\n        setindirizzo_A(event.target.value);\r\n    }\r\n    //change , Indirizzo Puno Luce\r\n    const handlChangePUNTOLUCEind = (event) =>{\r\n        setindirizzo_PL(event.target.value);\r\n    }\r\n\r\n    //Option change , tipo attuatore\r\n    const handleoptionsStateTipoAttuatori = (event) =>{\r\n\r\n        setoptionsStateTipoAttuatori (event.target.value);\r\n        if(event.target.value === \"serrande_tapparelle\"){\r\n            setoptionsStateTipoAttuatoriTIMER(true);\r\n        }else{\r\n            setoptionsStateTipoAttuatoriTIMER(false);\r\n        }\r\n    }\r\n    //change , Timer Salita [se esiste]\r\n    const handlChangeTIMER_UP = (event) =>{\r\n        setTIMER_UP(event.target.value);\r\n    }\r\n    //change , Timer Discesa [se esiste]\r\n    const handlChangeTIMER_DOWN = (event) =>{\r\n        setTIMER_DOWN(event.target.value);\r\n    }\r\n\r\n    //CLICK AGGIUNGI\r\n    const handlClickAGGIUNGI = (event) =>{\r\n        if(optionsStateTipoAttuatori === \"serrande_tapparelle\"){\r\n            handel_AGIUNGInew({nome_attuatore: nomeATTUATORE, indirizzo_Ambiente : indirizzo_A,\r\n                indirizzo_PL : indirizzo_PL, tipo_attuatore : optionsStateTipoAttuatori, \r\n                timer_salita : TIMER_UP, timer_discesa: TIMER_DOWN });\r\n        }else{\r\n            handel_AGIUNGInew({nome_attuatore: nomeATTUATORE, indirizzo_Ambiente : indirizzo_A,\r\n                indirizzo_PL : indirizzo_PL, tipo_attuatore : optionsStateTipoAttuatori});\r\n        }\r\n        setinomeATTUATORE(\"\");\r\n    }\r\n\r\n\r\n\r\n    const timer_salitadiscesa = () => {\r\n        return (\r\n            <>\r\n                <Col lg={3}>\r\n                    <Col >\r\n                        <Row >\r\n                        <Col ><i>Timer Salita [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                                <input className=\"form-control\" onChange={handlChangeTIMER_UP} min='1000'type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_UP}  />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col >\r\n                        <Row >\r\n                        <Col ><i>Timer Discesa [mS]</i></Col>\r\n                            <Col lg={12}>\r\n                            <input className=\"form-control\" onChange={handlChangeTIMER_DOWN} min='1000' type=\"number\" name=\"SetTemp\" step=\"1\" value={TIMER_DOWN} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    const Address_Select = () => {\r\n\r\n        if(optionsStateTipoAttuatori === \"campanello_porta\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Citofono interno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_PL} onChange={handlChangePUNTOLUCEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else if(optionsStateTipoAttuatori === \"serrature\"){\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Posto Esterno</i></Col>\r\n                            <Col lg={8}>\r\n                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_A} onChange={handlChangeAMBIENTEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i></i></Col>\r\n                            <Col lg={8}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }else{\r\n            return(\r\n                <>\r\n                    <Col lg={2}>\r\n                        <Row >\r\n                            <Col lg={8}><i>Ambiente</i></Col>\r\n                            <Col lg={8}>\r\n                               <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_A} onChange={handlChangeAMBIENTEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <Row>\r\n                            <Col lg={8}><i>Puno Luce</i></Col>\r\n                            <Col lg={8}>\r\n                               <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" min=\"0\" max=\"9\" step=\"1\" value={indirizzo_PL} onChange={handlChangePUNTOLUCEind} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n    \r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"2rem\" }}>\r\n            <hr></hr>\r\n\r\n            <div>\r\n                <h3>Aggiungi Attuatore</h3>\r\n            </div>\r\n            </Container>\r\n\r\n            <Container style={{ paddingTop: \"20px\", marginBottom:'100px' }} >\r\n                <Card  style={{ width: '100%', border: \"2px solid blue\" }}>\r\n                    <Card.Header className=\"bg-secondary \">\r\n                        <Row>\r\n                            <Col lg={4} style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <input type=\"text\" className=\"form-control\" value={nomeATTUATORE} placeholder=\"Inserisci il nome dell'Attuatore\" onChange={handleChangeNOME_ATTUTATORE} onBlur={handleChangeNOME_ATTUTATOREupdateDATABASE} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n\r\n                                {Address_Select()}\r\n\r\n                                <Col lg={optionsStateTipoAttuatoriTIMER ? 3 : 6} >\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Tipo Attuatore</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <select name=\"tipiattuatori\" value={optionsStateTipoAttuatori} onChange={handleoptionsStateTipoAttuatori}> \r\n                                                <option value=\"on_off\">ON/OFF</option>\r\n                                                <option value=\"dimmer\">Dimmer</option>\r\n                                                <option value=\"serrande_tapparelle\">Serrande/Tapparelle</option>\r\n                                                <option value=\"gruppi\">Gruppi</option>\r\n                                                <option value=\"sensori_temperatura\">Sensori Temperatura</option>\r\n                                                <option value=\"termostati\">Termostati</option>\r\n                                                <option value=\"serrature\">Serrature</option>\r\n                                                <option value=\"campanello_porta\">Campanello porta</option>\r\n                                            </select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                {optionsStateTipoAttuatoriTIMER ? timer_salitadiscesa() : null}\r\n\r\n\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" className=\"btn-primary\" onClick={handlClickAGGIUNGI} >AGGIUNGI</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default AggiungiAttuatore;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col, Modal } from 'react-bootstrap';\r\nimport ConfigurazioneDispositivi from \"./ConfigurazioneDispositivi\"\r\nimport AggiungiAttuatore from \"./AggiungiAttuatore\"\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction Configurazioni() {\r\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n\r\n    //pop up error\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [messaggio_da_visualizzare, setmessaggio_da_visualizzare] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        setListaDispositivi([]);\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    setListaDispositivi(data);\r\n                });\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (address, datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + address, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n    //AGGIORNA NEL DATABASE IL NOME ATTUATORE e nel HOOK ---->OK<----\r\n    const handle_CHANHE_NOME = (value) => {\r\n        //value.nome_attuatore\r\n        //value.nuovonome\r\n\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'nuovo_nome': value.nuovonome };\r\n        post_request_update_database('AGGIORNA_NOME_ATTUATORE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.nome_attuatore = value.nuovonome;\r\n    }\r\n\r\n    //AGGIORNA NEL DATABASE L'INDIRIZZO AMBIENTE e nel HOOK\r\n    const handle_CHANHE_A = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'indirizzo_Ambiente': value.indirizzo_Ambiente };\r\n        post_request_update_database('AGGIORNA_INDIRIZZO_A.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.indirizzo_Ambiente = value.indirizzo_Ambiente;\r\n    }\r\n    //AGGIORNA NEL DATABASE L'INDIRIZZO PL e nel HOOK\r\n    const handle_CHANHE_PL = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'indirizzo_PL': value.indirizzo_PL };\r\n        post_request_update_database('AGGIORNA_INDIRIZZO_PL.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.indirizzo_PL = value.indirizzo_PL;\r\n    }\r\n    //AGGIORNA NEL DATABASE IL TIPO ATTUATORE e nel HOOK\r\n    const handle_TIPO = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'tipo_attuatore': value.tipo_attuatore };\r\n        post_request_update_database('AGGIORNA_TIPO_ATTUATORE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.tipo_attuatore = value.tipo_attuatore;\r\n    }\r\n    //AGGIORNA NEL DATABASE TIMER SALITA e nel HOOK\r\n    const handle_TIMER_UP = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'timer_salita': value.timer_salita };\r\n        post_request_update_database('AGGIORNA_TIMER_SERRANDETAPPARELLE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.timer_salita = value.timer_salita;\r\n    }\r\n    //AGGIORNA NEL DATABASE TIMER DISCESA e nel HOOK\r\n    const handle_TIMER_DOWN = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore, 'timer_discesa': value.timer_discesa };\r\n        post_request_update_database('AGGIORNA_TIMER_SERRANDETAPPARELLE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n        attuatore.timer_discesa = value.timer_discesa;\r\n    }\r\n    //AGGIORNA NEL DATABASE ***ELIMINA*** e nel HOOK\r\n    const handle_ELIMINA = (value) => {\r\n        var datas = { 'nome_attuatore': value.nome_attuatore };\r\n        post_request_update_database('RIMUOVI_ATTUATORE.json', datas);\r\n\r\n        //Aggiorna Lista nel Array HOOK\r\n        var myArray = lista_dispositivi.filter(function (device) {\r\n            return device.nome_attuatore !== value.nome_attuatore;\r\n        });\r\n        setListaDispositivi(myArray);\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    //AGGIUNGI NUOVO ATTUATORE  \r\n    const handel_AGIUNGInew = (value) => {\r\n        if (value.nome_attuatore === '') {\r\n            setmessaggio_da_visualizzare(\"Il nome del nuovo Attuatore non può essere vuoto\");\r\n            handleShow();\r\n            //Pop up\r\n        } else {\r\n            //Controlla se esiste in \"lista_dispositivi\"\r\n            var attuatore = lista_dispositivi.find(device => device.nome_attuatore === value.nome_attuatore);\r\n            if (typeof attuatore === \"undefined\") {\r\n                //Ok inserisci nel database!!!\r\n\r\n                post_request_update_database('AGGIUNGI_ATTUATORE.json', value);\r\n\r\n                //Aggiungi in lista_dispositivi\r\n                setListaDispositivi(lista_dispositivi => [...lista_dispositivi, value]);\r\n            } else {\r\n                //ERROE c'è già --> \"POPUP\"\r\n                setmessaggio_da_visualizzare(\"Esiste già il nome dell'attuatore nel database\");\r\n                handleShow();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                {lista_dispositivi.map((device, i) => (\r\n                    <div key={device.nome_attuatore} >\r\n                        <ConfigurazioneDispositivi device={device} handle_CHANHE_NOME={handle_CHANHE_NOME}\r\n                            handle_CHANHE_A={handle_CHANHE_A} handle_CHANHE_PL={handle_CHANHE_PL}\r\n                            handle_TIPO={handle_TIPO} handle_TIMER_UP={handle_TIMER_UP} handle_TIMER_DOWN={handle_TIMER_DOWN}\r\n                            handle_ELIMINA={handle_ELIMINA} />\r\n                    </div>\r\n                ))}\r\n\r\n                <AggiungiAttuatore handel_AGIUNGInew={handel_AGIUNGInew} />\r\n\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Errore</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {messaggio_da_visualizzare}\r\n                  </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Ok\r\n                     </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Configurazioni;","import react from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport Test from '../Test/Test';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\nfunction Homepage() {\r\n    let history = useHistory();\r\n\r\n    const handleClickConfigurazioni = () => {\r\n\r\n        history.push(\"configurazione.html\");\r\n\r\n    };\r\n    const handleClickTest = () => {\r\n        history.push(\"test.html\");\r\n    };\r\n    const handleClickNodeRed = () => {\r\n        history.push(\"noderedHome.html\");\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">SCS-bus Raspberry shield</h1>\r\n                    <p className=\"lead\">Benvenuti nella pagina di configurazione dei dispositivi del Bus SCS e Test</p>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Attuatori on/off</li>\r\n                                <li>Dimmer</li>\r\n                                <li>Serrande/Tapparelle</li>\r\n                                <li>Gruppi</li>\r\n                                <li>Sensori Temperatura</li>\r\n                                <li>Termostati</li>\r\n                                <li>Serrature</li>\r\n                                <li>Campanello porta</li>\r\n                            </ul>\r\n                            <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\" onClick={handleClickConfigurazioni} >Entra</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card mb-4 shadow-sm\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Test</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"card-title pricing-card-title\"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Attuatori on/off</li>\r\n                                <li>Dimmer</li>\r\n                                <li>Serrande/Tapparelle</li>\r\n                                <li>Gruppi</li>\r\n                                <li>Sensori Temperatura</li>\r\n                                <li>Termostati</li>\r\n                                <li>Serrature</li>\r\n                                <li>Campanello porta</li>\r\n                            </ul>\r\n                            <button type=\"button\" className=\"btn btn-lg btn-block btn-primary idTest\" onClick={handleClickTest} >Entra</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"card mb-4 box-shadow\">\r\n                        <div class=\"card-header\">\r\n                        <h4 className=\"my-0 font-weight-normal\">Node-RED</h4>\r\n                        </div>\r\n                        <div class=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>AWS IoTs</li>\r\n                                <li>Alexa virtual-smart-home</li>\r\n                            </ul>\r\n                            <button type=\"button\" class=\"btn btn-lg btn-block btn-primary mt-auto\" style={{marginBottom:'1em'}} onClick={handleClickNodeRed}>Entra</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Homepage;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedAlexa() {\r\n    //const [startNodered_enable, setstartNodered_enable] = useState(true);\r\n    const [stato_esporta, setstato_esporta] = useState(true);\r\n    const [stato_startNode, setstato_startNode] = useState(false);\r\n    const [link_nodered, setlink_nodered] = useState(\"\");\r\n\r\n    const [flow_anuale, setflow_anuale] = useState(\"\");\r\n    const textAreaRef = useRef(null);\r\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\r\n\r\n\r\n    const [secondu, setsecondu] = useState(30);\r\n    const [over, setover] = useState(false);\r\n    const [timerID, settimerID] = useState(null);\r\n\r\n    var second = 30;\r\n\r\n    useEffect(() => {\r\n        if (secondu === 0) {\r\n            clearTimeout(timerID);\r\n        }\r\n\r\n        return () => {\r\n            //console.log(\"returnnnnnn\");\r\n            // clearTimeout(timerID);\r\n        };\r\n    }, [secondu]);\r\n\r\n\r\n    const tick = () => {\r\n        console.log('tick ' + second);\r\n        if (second === 0) setover(true);\r\n        else {\r\n            console.log(second);\r\n            second = (second - 1);\r\n            setsecondu(second);\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handle_count = () => {\r\n        if (stato_startNode === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        if (secondu === 0) {\r\n            return (\r\n                <>\r\n                    <a href={link_nodered} target=\"_blank\">{link_nodered} </a>\r\n                </>\r\n            );\r\n        } else {\r\n            console.log(\"countdown \" + secondu);\r\n\r\n            return (\r\n                <>\r\n                    <p> Wait NodeRed start: {secondu} sec</p>\r\n                </>\r\n            );\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handle_Esporta = () => {\r\n        setstato_esporta(false);\r\n        var add = window.location.host.split(\":\");\r\n        setlink_nodered('http://' + add[0] + ':1880');\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Send_to_NodeRed.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                });\r\n        };\r\n        fetchData();\r\n        handle_startNodered();\r\n    };\r\n\r\n\r\n    const handle_startNodered = () => {\r\n\r\n        const t = setInterval(() => tick(), 1000);\r\n        settimerID(t);\r\n        //        clearTimeout(timerID);\r\n\r\n        setstato_startNode(true);\r\n\r\n    };\r\n\r\n\r\n    const handle_GeneraManuale = () => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Get_NodeRed_manual_flow.json')\r\n                .then(res => res.text())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    setflow_anuale(data);\r\n                });\r\n        };\r\n        fetchData();\r\n\r\n    };\r\n\r\n    const handle_codeflow_manuale = () => {\r\n        if (flow_anuale === '') {\r\n            return (\r\n                <>\r\n\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\r\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_CopyClipboard = (e) => {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        // This is just personal preference.\r\n        // I prefer to not show the whole text area selected.\r\n        e.target.focus();\r\n        setstato_startmanuale(true);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handle_codeflow_manuale_incolla = () => {\r\n        var add = window.location.host.split(\":\");\r\n        var add2 = ('http://' + add[0] + ':1880');\r\n        if (stato_startmanuale === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <ul style={{ listStyleType: 'none' }} >\r\n                    <li>Apri node-red</li>\r\n                    <li>Importa Flow</li>\r\n                    <li>Incolla il contenuto generato</li>\r\n                </ul>\r\n\r\n\r\n                <a href={add2} target=\"_blank\">{add2} </a>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Automatica</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Esporta auto-configurazione</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_Esporta} >1 - Esporta su Node-Red</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_count()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"card-deck text-center\"  >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Manuale</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Genera NodeRed Flow</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale()}\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale_incolla()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedAlexa;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedHome() {\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed AWS</h4>\r\n                        </div>\r\n                        <div>\r\n                            <p><i><small>Configurare prima AWS Server: <a href=\"http://scsshields.altervista.org/AWS_Skill_Bticino.html\" target=\"_blank\">Guida</a></small></i></p>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>                                    \r\n                                    <a href=\"/NoderedAlexaAWS.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"card-deck text-center\"  >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed \"virtual-smart-home\" library</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <a href=\"/noderedAlexa.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedHome;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NodeRedAWSDispositivi({ device }) {\r\n    // EndPoint\r\n    const [name_EndPoint, setname_EndPoint] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setname_EndPoint(device.nome_endpoint);\r\n    }, [device]);\r\n\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + 'SetDeviceEndPointAWS.json', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n        \r\n\r\n    //******************Device ENDPOINT******************\r\n    //change\r\n    const handleChangeAWSDeviceENDPOINT = (event) => {\r\n        setname_EndPoint(event.target.value);\r\n    }\r\n    const handleBlurAWSDeviceENDPOINT = (event) => {\r\n        //Qui ho il nome Attuatore Completo\r\n        //Update SERVER!\r\n        var datas = { 'nome_attuatore': device.nome_attuatore , 'nome_endpoint': event.target.value };\r\n        post_request_update_database(datas);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"text-primary text-center\">\r\n                    {device.nome_attuatore}\r\n                </Col>\r\n                <Col lg={6} className=\"text-center\">\r\n                </Col>\r\n                <Col>\r\n                    <input type=\"text\" className=\"form-control\" value={name_EndPoint} placeholder=\"Inserisci endpoint\" onChange={handleChangeAWSDeviceENDPOINT} onBlur={handleBlurAWSDeviceENDPOINT} />\r\n                </Col>\r\n            </Row>\r\n            <hr></hr>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NodeRedAWSDispositivi;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Form, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport NodeRedAWSDispositivi from \"./NodeRedAWSDispositivi\"\r\n\r\n\r\n\r\nimport \"./../App.css\";\r\n//https://www.pluralsight.com/guides/uploading-files-with-reactjs\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedAlexaAWS() {\r\n    //Indirizzo EndPoint\r\n    const [add_EndPoint, setadd_EndPoint] = useState(\"\");\r\n    //File name Certificati\r\n    const [FILE_private_key, setFILE_private_key] = useState(\"\");\r\n    const [FILE_cert_pem, setFILE_cert_pem] = useState(\"\");\r\n    const [FILE_root_CA, setFILE_root_CA] = useState(\"\");\r\n    //Dispositivi e ENDPOINT\r\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n\r\n    const [flow_anuale, setflow_anuale] = useState(\"\");\r\n    const textAreaRef = useRef(null);\r\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setListaDispositivi([]);\r\n\r\n        const fetchDataDispositivi = async () => {\r\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    setListaDispositivi(data);\r\n                });\r\n        };\r\n\r\n\r\n        fetchData();\r\n        fetchDataDispositivi();\r\n\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        await fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                setadd_EndPoint(data.EndPoint);\r\n                setFILE_private_key(data.PRIVATE_KEY);\r\n                setFILE_cert_pem(data.CERT_PEM);\r\n                setFILE_root_CA(data.CRT);\r\n            });\r\n    };\r\n\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n\r\n    const [selectedFile, setSelectedFile] = useState();\r\n\r\n    const changeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        //setIsSelected(true);\r\n    };\r\n\r\n    const handleSubmission = (tipo) => {\r\n        const formData = new FormData();\r\n        formData.append('File', selectedFile);\r\n        fetch(\r\n            ADDRESS_SERVER + 'AWSCertificatiploadHandler.html?tipo=' + tipo,\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log('Success:', result);\r\n                fetchData();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //******************Indirizzo ENDPOINT******************\r\n    //change\r\n    const handleChangeEndPoint = (event) => {\r\n        setadd_EndPoint(event.target.value);\r\n    }\r\n    const handleBlurEndPoint = (event) => {\r\n        //Qui ho il nome Attuatore Completo\r\n        //Update SERVER!\r\n        var datas = { 'EndPoint': event.target.value };\r\n        post_request_update_database(datas);\r\n    }\r\n\r\n\r\n\r\n    const handle_GeneraManuale = () => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Get_NodeRedAWS_manual_flow.json')\r\n                .then(res => res.text())\r\n                .then((data) => {\r\n                    setflow_anuale(data);\r\n                });\r\n        };\r\n        fetchData();\r\n\r\n    };\r\n    const handle_codeflow_manuale = () => {\r\n        if (flow_anuale === '') {\r\n            return (\r\n                <>\r\n\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\r\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_codeflow_manuale_incolla = () => {\r\n        var add = window.location.host.split(\":\");\r\n        var add2 = ('http://' + add[0] + ':1880');\r\n        if (stato_startmanuale === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <ul style={{ listStyleType: 'none' }} >\r\n                    <li>Apri node-red</li>\r\n                    <li>Importa Flow</li>\r\n                    <li>Incolla il contenuto generato</li>\r\n                </ul>\r\n\r\n\r\n                <a href={add2} target=\"_blank\">{add2} </a>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_CopyClipboard = (e) => {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        // This is just personal preference.\r\n        // I prefer to not show the whole text area selected.\r\n        e.target.focus();\r\n        setstato_startmanuale(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                <h1 className=\"display-5\">Configurazione AWS-IoT</h1>\r\n            </div>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        EndPoint\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                </Col>\r\n                                <Col lg={6} className=\"text-primary text-center\">\r\n                                    <input type=\"text\" className=\"form-control\" value={add_EndPoint} placeholder=\"Inserire indirizzo EndPoint AWS IoT\" onChange={handleChangeEndPoint} onBlur={handleBlurEndPoint} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Certificati AWS-IoT\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    PRIVATE_KEY\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_private_key}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem.key\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('PRIVATE_KEY')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    CERT_PEM\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_cert_pem}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem.crt\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('CERT_PEM')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    root-CA\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_root_CA}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem,.txt\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('root-CA')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Assegnazione endpoint AWS lambda ai Dispositivi\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n\r\n                                {lista_dispositivi.map((device, i) => (\r\n                                    <div key={i} className=\"container-fluid\">\r\n                                        <NodeRedAWSDispositivi device={device}  />\r\n                                    </div>\r\n                                ))}\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\", paddingBottom: '40px' }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Genera Flow NodeRed\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid className='text-center'>\r\n\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Genera NodeRed Flow</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale()}\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale_incolla()}\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedAlexaAWS;","import { useState, useEffect } from 'react';\r\nimport MYnavBar from './MYnavBar'\r\nimport Test from './Test/Test'\r\nimport Configurazione from './Configurazione/Configurazione'\r\nimport Homepage from './HomePage/Homepage'\r\n\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport noderedAlexa from './NodeRedAlexa/NodeRedAlexa';\r\nimport noderedHome from './NodeRedAlexa/noderedHome';\r\nimport NoderedAlexaAWS from './NodeRedAlexa/noderedAlexaAWS';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <MYnavBar />\r\n\r\n        <Route exact path=\"/\" component={Homepage}/>\r\n        <Route exact path=\"/configurazione.html\" component={Configurazione}/>\r\n        <Route exact path=\"/test.html\" component={Test}/>\r\n        <Route exact path=\"/noderedHome.html\" component={noderedHome}/>\r\n        <Route exact path=\"/noderedAlexa.html\" component={noderedAlexa}/>\r\n        <Route exact path=\"/NoderedAlexaAWS.html\" component={NoderedAlexaAWS}/>\r\n\r\n\r\n      </div>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}