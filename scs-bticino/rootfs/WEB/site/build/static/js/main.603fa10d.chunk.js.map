{"version":3,"sources":["MYnavBar.js","Test/Switch.js","Test/Sensori_Temperatura.js","Test/Termostati.js","Test/Serrande_Tapparelle.js","Test/Dimmer.js","Test/Gruppi.js","Test/Serrature.js","Test/Campanello_porta.js","Test/Dispositivi.js","Test/Test.js","Configurazione/DatabaseManager.js","Configurazione/Configurazione.js","HomePage/Homepage.js","NodeRedAlexa/NodeRedAlexa.js","NodeRedAlexa/noderedHome.js","NodeRedAlexa/NodeRedAWSDispositivi.js","NodeRedAlexa/noderedAlexaAWS.js","App.js","reportWebVitals.js","index.js"],"names":["MYnavBar","Container","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ON_OFF","device","valuedataRT","clientMWTT","useState","statoONOFF","setstatoONOFF","useEffect","nome_attuatore","stato","localeCompare","style","paddingTop","Card","width","border","Header","Row","Col","textAlign","fontSize","marginRight","indirizzo_Ambiente","indirizzo_PL","Body","fluid","lg","data-icon","src","alignSelf","alignItems","type","onClick","connected","topic","publish","Footer","margin","padding","Sensori_Temperatura","statosensore","setstatosensore","Button","size","variant","Termostati","temp_termostato","settemp_termostato","modalita_termostato","setmodalita_termostato","m","split","name","step","value","onChange","event","target","onBlur","Serrande_Tapparelle","percentualeTapparelle","set_percentualeTapparelle","sm","tooltip","min","max","onAfterChange","Dimmer","statodimmerONOFF","setstatodimmerONOFF","statodimmerPercent","setstatodimmerPercent","percentualeDimmer","set_percentualeDimmer","Grupppi","Serrature","Campanello_porta","Dispositivi","mqttdata","tipo_attuatore","Gruppi","Test","lista_dispositivi","setListaDispositivi","MqttClient","setMqttClient","MQTT_data","setMQTT_data","setDebugSCSbus","client","loadDevices","a","fetch","ADDRESS_SERVER","then","r","json","data","console","log","connectMqtt","devices","cfg","host","window","location","hostname","proto","use_tls","url","ws_port","path","options","reconnectPeriod","clean","username","password","mqtt","connect","on","subscribe","err","error","message","end","payload","packet","TextDecoder","decode","prev","parts","length","warn","deviceNameFromTopic","toLowerCase","mesg","matchingDevice","find","dev","dd","map","d","unsubscribe","e","i","marginBottom","DatabaseManager","uploading","setUploading","setMessage","messageType","setMessageType","showMessage","text","setTimeout","downloadDatabase","response","ok","Error","blob","URL","createObjectURL","document","createElement","download","Date","toISOString","body","appendChild","click","revokeObjectURL","removeChild","uploadDatabase","file","files","endsWith","formData","FormData","append","method","result","reload","createBackup","backup_file","Alert","onClose","dismissible","htmlFor","as","disabled","Spinner","animation","role","aria-hidden","accept","display","Configurazione","listaDispositivi","showModal","setShowModal","modalMode","setModalMode","setCurrentDevice","timer_salita","timer_discesa","setFormData","handleOpenModal","mode","handleCloseModal","handleInputChange","handleSubmit","preventDefault","parseInt","headers","JSON","stringify","handleDelete","confirm","getDeviceLabel","tipo","Table","responsive","hover","index","Badge","Modal","show","onHide","closeButton","Title","Form","onSubmit","md","Group","Label","Control","placeholder","required","Text","Select","Homepage","history","useHistory","push","NoderedAlexa","setstato_esporta","stato_startNode","setstato_startNode","link_nodered","setlink_nodered","flow_anuale","setflow_anuale","textAreaRef","useRef","stato_startmanuale","setstato_startmanuale","secondu","setsecondu","setover","timerID","settimerID","second","clearTimeout","handle_startNodered","t","setInterval","handle_CopyClipboard","current","select","execCommand","focus","color","add","res","fetchData","marginTop","rows","readonly","ref","add2","listStyleType","handle_codeflow_manuale_incolla","NoderedHome","NodeRedAWSDispositivi","name_EndPoint","setname_EndPoint","nome_endpoint","datas","post_request_update_database","NoderedAlexaAWS","add_EndPoint","setadd_EndPoint","FILE_private_key","setFILE_private_key","FILE_cert_pem","setFILE_cert_pem","FILE_root_CA","setFILE_root_CA","fetchDataDispositivi","EndPoint","PRIVATE_KEY","CERT_PEM","CRT","selectedFile","setSelectedFile","changeHandler","handleSubmission","catch","paddingBottom","App","exact","component","noderedHome","noderedAlexa","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.603fa10d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./App.css\"\r\n\r\n\r\n\r\nfunction MYnavBar() {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"\">SCSshield</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/\">Home</Nav.Link>\r\n                            <Nav.Link href=\"configurazione.html\">Configurazioni</Nav.Link>\r\n                            <Nav.Link href=\"test.html\">Test</Nav.Link>\r\n                            <Nav.Link href=\"noderedHome.html\">Node-Red</Nav.Link>                           \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default MYnavBar;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\nfunction ON_OFF({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"lamp_accesa.svg\");\r\n            } else {\r\n                setstatoONOFF(\"lamp_spenta.svg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>ON/OFF</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ON_OFF;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Sensori_Temperatura({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            setstatosensore(valuedataRT.stato + \"°\");\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n    const aggiorna_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic =  \"/scsshield/device/\" + device.nome_attuatore + \"/request\";\r\n                clientMWTT.publish(topic, \" \")\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                <Col lg={8} style={{ alignSelf: \"center\" }}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\r\n                                        <Col lg={8}><b>{statosensore}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={aggiorna_button} >Aggiorna</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SENSORE-TEMPERATURA</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sensori_Temperatura;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Termostati({ device, valuedataRT, clientMWTT }) {\r\n    const [statosensore, setstatosensore] = useState(\"--.-°\");\r\n    const [temp_termostato, settemp_termostato] = useState(\"--.-°\");\r\n    const [modalita_termostato, setmodalita_termostato] = useState(\"----\");\r\n //   const [temp_setting_termostato, set_temp_setting_termostato] = useState(10);\r\n\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n\r\n            var m = (valuedataRT.topic).split(\"/\");\r\n            if (m[4] != null) {\r\n                if (m[4].localeCompare(\"status\") == 0) {\r\n                    setstatosensore(valuedataRT.stato + \"°\");\r\n                } else if (m[4].localeCompare(\"temperatura_termostato_impostata\") == 0) {\r\n                    settemp_termostato(valuedataRT.stato);\r\n                   // set_temp_setting_termostato(valuedataRT.stato);\r\n                } else if (m[4].localeCompare(\"modalita_termostato_impostata\") == 0) {\r\n                    setmodalita_termostato(valuedataRT.stato);\r\n                }\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    const settemp_setting_termostato = (event) => {\r\n        settemp_termostato(event.target.value);\r\n    };\r\n\r\n    const send_settemp_setting_termostato = (event) => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_temp_termostato\";\r\n                clientMWTT.publish(topic, event.target.value)\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const estate_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'estate')\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'off')\r\n            }\r\n        }\r\n    };\r\n    const inverno_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/set_modalita_termostato\";\r\n                clientMWTT.publish(topic, 'inverno')\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row >\r\n                                <Col lg={2}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Temp-Ambiente</i></Col>\r\n                                        <Col lg={8}><b>{statosensore}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Temp-Termostato</i></Col>\r\n                                        <Col lg={8}><b>{temp_termostato}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\r\n                                    <Row >\r\n                                        <Col lg={8}><i>Modalita</i></Col>\r\n                                        <Col lg={8}><b>{modalita_termostato}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <Row >\r\n                                        <Col lg={6}><i>Set Temp</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"col-xs-1\">\r\n                                                <input className=\"form-control\" style={{ width: \"90%\" }} type=\"number\" name=\"SetTemp\" step=\"0.5\" value={temp_termostato} onChange={settemp_setting_termostato} onBlur={send_settemp_setting_termostato} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={estate_button}>CALDO</Button>\r\n                                        <Button style={{ marginRight: \"8px\" }} size=\"md\" variant=\"outline-primary\" onClick={off_button}>OFF</Button>\r\n                                        <Button size=\"md\" variant=\"outline-primary\" onClick={inverno_button}>FREDDO</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>TERMOSTATO</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Termostati;","import { useState, useEffect } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Serrande_Tapparelle({ device, valuedataRT, clientMWTT }) {\r\n\r\n    const [percentualeTapparelle, set_percentualeTapparelle] = useState(50);\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            set_percentualeTapparelle(valuedataRT.stato);\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    const update_percentuale = (event) => {\r\n        set_percentualeTapparelle(event.target.value);\r\n    };\r\n    const update_mqtt_serrande = (event) => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/percentuale\";\r\n                clientMWTT.publish(topic, percentualeTapparelle);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col sm={12}>\r\n                                    <Row >\r\n                                        <Col><i>Stato %</i></Col>\r\n                                        <Col lg={6}>\r\n                                            <RangeSlider tooltip='on' value={percentualeTapparelle} min=\"0\" max=\"100\" step=\"1\"  onChange={update_percentuale} onAfterChange={update_mqtt_serrande} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRANDE/TAPPARELLE</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Serrande_Tapparelle;","import { useState, useEffect } from 'react';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\nfunction Dimmer({ device, valuedataRT, clientMWTT }) {\r\n\r\n    //Stato\r\n    const [statodimmerONOFF, setstatodimmerONOFF] = useState(\"lamp_disabilitata.svg\");\r\n    const [statodimmerPercent, setstatodimmerPercent] = useState(\"--%\");\r\n\r\n    //Comando\r\n    const [percentualeDimmer, set_percentualeDimmer] = useState(50);\r\n\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            var m = (valuedataRT.topic).split(\"/\");\r\n            if (m[5] != null) {\r\n                setstatodimmerPercent(valuedataRT.stato + \"%\");\r\n                set_percentualeDimmer(valuedataRT.stato);\r\n            } else {\r\n                if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                    setstatodimmerONOFF(\"lamp_accesa.svg\");\r\n                } else {\r\n                    setstatodimmerONOFF(\"lamp_spenta.svg\");\r\n                }\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n    const update_percentuale = (event) => {\r\n        setstatodimmerPercent(valuedataRT.stato + \"%\");\r\n        set_percentualeDimmer(event.target.value);\r\n    };\r\n    const update_mqtt_dimmer = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"on\");\r\n\r\n                topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, percentualeDimmer);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/dimmer\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={4} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato Percentuale\t</i></Col>\r\n                                        <Col lg={8}><b>{statodimmerPercent}</b></Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={2} style={{ alignSelf: \"center\" }}>\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statodimmerONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    <Row >\r\n                                        <Col lg={6}><i>Set Dimmer</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"col-xs-1\">\r\n                                                <RangeSlider tooltip='off' value={percentualeDimmer} min=\"10\" max=\"100\" step=\"10\" onChange={update_percentuale} onAfterChange={update_mqtt_dimmer} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>Dimmer</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Dimmer;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Grupppi({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"lamp_disabilitata.svg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"lamp_accesa.svg\");\r\n            } else {\r\n                setstatoONOFF(\"lamp_spenta.svg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n\r\n\r\n\r\n    const on_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"on\")\r\n            }\r\n        }\r\n    };\r\n    const t_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"t\")\r\n            }\r\n        }\r\n    };\r\n    const off_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/switch\";\r\n                clientMWTT.publish(topic, \"off\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Ambiente: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                        Punto Luce: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i>Stato</i></Col>\r\n                                        <Col lg={8}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-success btn-md\" onClick={on_button}>ON</button>\r\n                                        <button style={{ marginRight: \"5px\" }} type=\"button\" className=\"btn btn-primary btn-md\" onClick={t_button} >T</button>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={off_button}>OFF</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>GRUPPI</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Grupppi;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Serrature({ device, valuedataRT, clientMWTT }) {\r\n\r\n    const sblocca_button = () => {\r\n        if (clientMWTT) {\r\n            if (clientMWTT.connected) {\r\n                let topic = \"/scsshield/device/\" + device.nome_attuatore + \"/sblocca\";\r\n                clientMWTT.publish(topic, \"sblocca\")\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n           <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    Posto Esterno: {device.indirizzo_Ambiente}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                            <Row>\r\n                                <Col lg={8} >\r\n                                    <Row>\r\n                                        <Col lg={8}><i></i></Col>\r\n                                        <Col lg={8}>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ alignSelf: \"center\" }}>\r\n                                    <div style={{ textAlign: \"center\", alignItems: \"right\" }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger btn-md\" onClick={sblocca_button}>SBLOCCA</button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>SERRATURE</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Serrature;","import { useState, useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\nfunction Campanello_porta({ device, valuedataRT, clientMWTT }) {\r\n    //Stato\r\n    const [statoONOFF, setstatoONOFF] = useState(\"bell_off.jpg\");\r\n\r\n    useEffect(() => {\r\n        if (device.nome_attuatore === valuedataRT.nome_attuatore) {\r\n            if ((valuedataRT.stato.localeCompare(\"on\") == 0) || (valuedataRT.stato.localeCompare(\"1\") == 0)) {\r\n                setstatoONOFF(\"bell_on.jpg\");\r\n            } else {\r\n                setstatoONOFF(\"bell_off.jpg\");\r\n            }\r\n        }\r\n    }, [valuedataRT]);\r\n\r\n\r\n    return (\r\n        <>\r\n           <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col style={{ textAlign: 'left' }} className=\"text-primary\">\r\n                                <h5>{device.nome_attuatore}</h5>\r\n                            </Col>\r\n                            <Col style={{ textAlign: 'right', fontSize: \"12px\" }} >\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    Citofono interno: {device.indirizzo_PL}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col style={{ textAlign: 'right', marginRight: \"12px\" }}>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid >\r\n                                    <Row>\r\n                                        <Col lg={12}><i>Stato</i></Col>\r\n                                        <Col lg={12}>\r\n                                            <img data-icon=\"switch\" src={\"/site/image/\" + statoONOFF} style={{ width: \"32px\" }} />\r\n                                        </Col>\r\n                                    </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\" style={{ textAlign: \"center\"  }}>\r\n                        <p style={{ fontSize: \"9px\", margin: 0, padding: \"0%\" }}>-Tipo-</p>\r\n                        <p style={{ fontSize: \"15px\", margin: 0, padding: \"0%\" }}>CAMPANELLO</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Campanello_porta;","import React from \"react\";\r\nimport ON_OFF from \"./Switch\"\r\nimport Sensori_Temperatura from \"./Sensori_Temperatura\"\r\nimport Termostati from \"./Termostati\"\r\nimport Serrande_Tapparelle from \"./Serrande_Tapparelle\"\r\nimport Dimmer from \"./Dimmer\"\r\nimport Gruppi from \"./Gruppi\"\r\nimport Serrature from \"./Serrature\"\r\nimport Campanello_porta from \"./Campanello_porta\"\r\n\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Dispositivi({ device, mqttdata, clientMWTT }) {\r\n\r\n    if (device.tipo_attuatore === \"on_off\") {\r\n        return (\r\n            <>\r\n                <ON_OFF device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\r\n            </>\r\n        );\r\n    } else if (device.tipo_attuatore === \"sensori_temperatura\") {\r\n        return (\r\n            <>\r\n                <Sensori_Temperatura device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT} />\r\n            </>\r\n        );\r\n    } else if (device.tipo_attuatore === \"termostati\") {\r\n        return (\r\n            <>\r\n                <Termostati device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"serrande_tapparelle\") {\r\n        return (\r\n            <>\r\n                <Serrande_Tapparelle device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"dimmer\") {\r\n        return (\r\n            <>\r\n                <Dimmer device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"gruppi\") {\r\n        return (\r\n            <>\r\n                <Gruppi device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"serrature\") {\r\n        return (\r\n            <>\r\n                <Serrature device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }else if (device.tipo_attuatore === \"campanello_porta\") {\r\n        return (\r\n            <>\r\n                <Campanello_porta device={device} valuedataRT={mqttdata} clientMWTT={clientMWTT}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Dispositivi;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Dispositivi from './Dispositivi';\r\nimport mqtt from \"mqtt\";\r\nimport \"./../App.css\";\r\n\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\nfunction Test() {\r\n  const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n  const [MqttClient, setMqttClient] = useState(null);\r\n  const [MQTT_data, setMQTT_data] = useState(\"\");\r\n  const [DebugSCSbus, setDebugSCSbus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let client = null;\r\n\r\n    const loadDevices = async () => {\r\n      const data = await fetch(ADDRESS_SERVER + \"GetConfigurazionereact.json\").then(r => r.json());\r\n      console.log(\"✅ Dispositivi caricati:\", data);\r\n      setListaDispositivi(data);\r\n      return data; // ✅ Ritorna i dati\r\n    };\r\n\r\n    const connectMqtt = async (devices) => {\r\n      // 1) prendi config dal backend\r\n      const cfg = await fetch(\"/mqtt_config.json\").then(r => r.json());\r\n      const host = window.location.hostname;\r\n      const proto = cfg.use_tls ? \"wss\" : \"ws\";\r\n      const url = `${proto}://${host}:${cfg.ws_port}${cfg.path || \"\"}`;\r\n\r\n      const options = { reconnectPeriod: 2000, clean: true };\r\n      if (cfg.username) options.username = cfg.username;\r\n      if (cfg.password) options.password = cfg.password;\r\n\r\n      console.log(\"MQTT url:\", url);\r\n      console.log(\"MQTT options:\", options);\r\n\r\n      // 2) connetti\r\n      client = mqtt.connect(url, options);\r\n      setMqttClient(client);\r\n\r\n      client.on(\"connect\", () => {\r\n        console.log(\"✅ MQTT connesso:\", url);\r\n\r\n        // ✅ Subscribe ai topic\r\n        client.subscribe(\"/scsshield/device/+/status\", (err) => {\r\n          if (err) console.error(\"Errore subscribe status:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/status\");\r\n        });\r\n        \r\n        client.subscribe(\"/scsshield/device/+/status/percentuale\", (err) => {\r\n          if (err) console.error(\"Errore subscribe percentuale:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/status/percentuale\");\r\n        });\r\n        \r\n        client.subscribe(\"/scsshield/device/+/modalita_termostato_impostata\", (err) => {\r\n          if (err) console.error(\"Errore subscribe modalita:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/modalita_termostato_impostata\");\r\n        });\r\n        \r\n        client.subscribe(\"/scsshield/device/+/temperatura_termostato_impostata\", (err) => {\r\n          if (err) console.error(\"Errore subscribe temperatura:\", err);\r\n          else console.log(\"✅ Subscribed to /scsshield/device/+/temperatura_termostato_impostata\");\r\n        });\r\n      });\r\n\r\n      client.on(\"error\", (err) => {\r\n        console.error(\"❌ MQTT ERROR:\", err?.message || err);\r\n        try { client.end(); } catch {}\r\n      });\r\n\r\n      // ✅ Handler messaggi - usa 'devices' passato come parametro\r\n      client.on(\"message\", (topic, payload, packet) => {\r\n        console.log(\"📨 MQTT message received:\", topic);\r\n        \r\n        const data = new TextDecoder(\"utf-8\").decode(payload);\r\n        \r\n        if (topic === \"/scsshield/debug/bus\") {\r\n          setDebugSCSbus(prev => [...prev, data + '\\n']);\r\n        } else {\r\n          const parts = topic.split(\"/\");\r\n          \r\n          // ✅ Verifica struttura topic\r\n          if (parts.length < 4) {\r\n            console.warn(\"⚠️ Topic malformato:\", topic);\r\n            return;\r\n          }\r\n          \r\n          const deviceNameFromTopic = parts[3].toLowerCase(); // ✅ Lowercase\r\n          const mesg = data;\r\n          \r\n          console.log(\"  Device dal topic:\", deviceNameFromTopic);\r\n          console.log(\"  Messaggio:\", mesg);\r\n          \r\n          // ✅ Trova dispositivo corrispondente\r\n          const matchingDevice = devices.find(dev => \r\n            dev.nome_attuatore.toLowerCase() === deviceNameFromTopic\r\n          );\r\n          \r\n          if (matchingDevice) {\r\n            const dd = { \r\n              \"nome_attuatore\": matchingDevice.nome_attuatore,\r\n              \"stato\": mesg, \r\n              \"topic\": topic \r\n            };\r\n            setMQTT_data(dd);\r\n            console.log(\"✅ Match trovato:\", dd.nome_attuatore, \"stato:\", dd.stato);\r\n          } else {\r\n            console.warn(\"⚠️ Nessun dispositivo trovato per:\", deviceNameFromTopic);\r\n            console.log(\"  Dispositivi disponibili:\", devices.map(d => d.nome_attuatore.toLowerCase()));\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    // ✅ Carica dispositivi PRIMA, poi connetti MQTT passando i dispositivi\r\n    (async () => {\r\n      const devices = await loadDevices();\r\n      await connectMqtt(devices);\r\n    })();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      console.log(\"🔌 Chiusura connessioni MQTT...\");\r\n      \r\n      if (client) {\r\n        try {\r\n          client.unsubscribe(\"/scsshield/device/+/status\");\r\n          client.unsubscribe(\"/scsshield/device/+/status/percentuale\");\r\n          client.unsubscribe(\"/scsshield/device/+/modalita_termostato_impostata\");\r\n          client.unsubscribe(\"/scsshield/device/+/temperatura_termostato_impostata\");\r\n          client.end();\r\n        } catch (e) {\r\n          console.error(\"Errore chiusura MQTT:\", e);\r\n        }\r\n      }\r\n    };\r\n  }, []); // ✅ Dipendenze vuote = esegue solo al mount\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        {lista_dispositivi.map((device, i) => (\r\n          <div key={i} style={{marginBottom:\"50px\"}}>\r\n            <Dispositivi device={device} mqttdata={MQTT_data} clientMWTT={MqttClient} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* Debug console (commentato) */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test;","import React, { useState } from 'react';\r\nimport { Card, Button, Alert, Spinner } from 'react-bootstrap';\r\n\r\nfunction DatabaseManager() {\r\n    const [uploading, setUploading] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n    const [messageType, setMessageType] = useState('info'); // 'success', 'danger', 'warning', 'info'\r\n\r\n    const showMessage = (text, type = 'info') => {\r\n        setMessage(text);\r\n        setMessageType(type);\r\n        setTimeout(() => setMessage(null), 5000);\r\n    };\r\n\r\n    const downloadDatabase = async () => {\r\n        try {\r\n            const response = await fetch('/download_database');\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Download failed');\r\n            }\r\n            \r\n            const blob = await response.blob();\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `scs_database_${new Date().toISOString().split('T')[0]}.json`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n            document.body.removeChild(a);\r\n            \r\n            showMessage('✅ Database scaricato con successo!', 'success');\r\n        } catch (error) {\r\n            console.error('Download error:', error);\r\n            showMessage(`❌ Errore download: ${error.message}`, 'danger');\r\n        }\r\n    };\r\n\r\n    const uploadDatabase = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        // Verifica che sia un file JSON\r\n        if (!file.name.endsWith('.json')) {\r\n            showMessage('❌ Seleziona un file JSON valido', 'danger');\r\n            event.target.value = null;\r\n            return;\r\n        }\r\n\r\n        setUploading(true);\r\n        showMessage('⏳ Caricamento database in corso...', 'info');\r\n\r\n        const formData = new FormData();\r\n        formData.append('database', file);\r\n\r\n        try {\r\n            const response = await fetch('/upload_database', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            const result = await response.json();\r\n            \r\n            if (response.ok) {\r\n                showMessage('✅ Database caricato con successo! Ricaricamento pagina...', 'success');\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 2000);\r\n            } else {\r\n                showMessage(`❌ Errore: ${result.error}`, 'danger');\r\n            }\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n            showMessage(`❌ Errore upload: ${error.message}`, 'danger');\r\n        } finally {\r\n            setUploading(false);\r\n            event.target.value = null; // Reset input\r\n        }\r\n    };\r\n\r\n    const createBackup = async () => {\r\n        try {\r\n            const response = await fetch('/backup_database', {\r\n                method: 'POST'\r\n            });\r\n            const result = await response.json();\r\n            \r\n            if (response.ok) {\r\n                showMessage(`✅ Backup creato: ${result.backup_file}`, 'success');\r\n            } else {\r\n                showMessage(`❌ Errore backup: ${result.error}`, 'danger');\r\n            }\r\n        } catch (error) {\r\n            console.error('Backup error:', error);\r\n            showMessage(`❌ Errore: ${error.message}`, 'danger');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"mb-4 shadow-sm\">\r\n            <Card.Header>\r\n                <h4 className=\"my-0 font-weight-normal\">🗄️ Gestione Database</h4>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                {message && (\r\n                    <Alert variant={messageType} onClose={() => setMessage(null)} dismissible>\r\n                        {message}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        variant=\"success\"\r\n                        size=\"lg\"\r\n                        onClick={downloadDatabase}\r\n                        className=\"mb-2\"\r\n                    >\r\n                        ⬇️ Scarica Database\r\n                    </Button>\r\n\r\n                    <div className=\"mb-2\">\r\n                        <label htmlFor=\"upload-db\" style={{ width: '100%' }}>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                size=\"lg\"\r\n                                as=\"span\"\r\n                                disabled={uploading}\r\n                                style={{ width: '100%' }}\r\n                            >\r\n                                {uploading ? (\r\n                                    <>\r\n                                        <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"border\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                            className=\"me-2\"\r\n                                        />\r\n                                        Caricamento...\r\n                                    </>\r\n                                ) : (\r\n                                    '⬆️ Carica Database'\r\n                                )}\r\n                            </Button>\r\n                        </label>\r\n                        <input\r\n                            id=\"upload-db\"\r\n                            type=\"file\"\r\n                            accept=\".json\"\r\n                            onChange={uploadDatabase}\r\n                            disabled={uploading}\r\n                            style={{ display: 'none' }}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button\r\n                        variant=\"warning\"\r\n                        size=\"lg\"\r\n                        onClick={createBackup}\r\n                    >\r\n                        💾 Crea Backup Manuale\r\n                    </Button>\r\n                </div>\r\n\r\n                <Alert variant=\"warning\" className=\"mt-3 mb-0\">\r\n                    <strong>⚠️ Attenzione:</strong>\r\n                    <ul className=\"mb-0 mt-2\" style={{ fontSize: '0.9rem' }}>\r\n                        <li>Il caricamento sostituisce completamente il database esistente</li>\r\n                        <li>Viene creato automaticamente un backup prima del caricamento</li>\r\n                        <li>La pagina si ricaricherà automaticamente dopo il caricamento</li>\r\n                        <li>Assicurati che il file JSON sia valido prima di caricarlo</li>\r\n                    </ul>\r\n                </Alert>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default DatabaseManager;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Button, Form, Row, Col, Alert, Table, Badge, Modal } from 'react-bootstrap';\r\nimport DatabaseManager from './DatabaseManager';\r\nimport '../App.css';\r\n\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\nfunction Configurazione() {\r\n    const [listaDispositivi, setListaDispositivi] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalMode, setModalMode] = useState('add'); // 'add' or 'edit'\r\n    const [currentDevice, setCurrentDevice] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [messageType, setMessageType] = useState('info');\r\n\r\n    // Form state\r\n    const [formData, setFormData] = useState({\r\n        nome_attuatore: '',\r\n        tipo_attuatore: 'on_off',\r\n        indirizzo_Ambiente: '',\r\n        indirizzo_PL: '',\r\n        timer_salita: '',\r\n        timer_discesa: ''\r\n    });\r\n\r\n    // Carica dispositivi all'avvio\r\n    useEffect(() => {\r\n        loadDevices();\r\n    }, []);\r\n\r\n    const loadDevices = async () => {\r\n        try {\r\n            const response = await fetch(ADDRESS_SERVER + \"GetConfigurazionereact.json\");\r\n            const data = await response.json();\r\n            setListaDispositivi(data);\r\n        } catch (error) {\r\n            console.error(\"Errore caricamento dispositivi:\", error);\r\n            showMessage(\"❌ Errore caricamento dispositivi\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const showMessage = (text, type = 'info') => {\r\n        setMessage(text);\r\n        setMessageType(type);\r\n        setTimeout(() => setMessage(null), 5000);\r\n    };\r\n\r\n    const handleOpenModal = (mode, device = null) => {\r\n        setModalMode(mode);\r\n        \r\n        if (mode === 'edit' && device) {\r\n            setCurrentDevice(device);\r\n            setFormData({\r\n                nome_attuatore: device.nome_attuatore,\r\n                tipo_attuatore: device.tipo_attuatore,\r\n                indirizzo_Ambiente: device.indirizzo_Ambiente,\r\n                indirizzo_PL: device.indirizzo_PL,\r\n                timer_salita: device.timer_salita || '',\r\n                timer_discesa: device.timer_discesa || ''\r\n            });\r\n        } else {\r\n            setCurrentDevice(null);\r\n            setFormData({\r\n                nome_attuatore: '',\r\n                tipo_attuatore: 'on_off',\r\n                indirizzo_Ambiente: '',\r\n                indirizzo_PL: '',\r\n                timer_salita: '',\r\n                timer_discesa: ''\r\n            });\r\n        }\r\n        \r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n        setCurrentDevice(null);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validazione\r\n        if (!formData.nome_attuatore || !formData.tipo_attuatore) {\r\n            showMessage(\"❌ Nome e tipo dispositivo sono obbligatori\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const url = modalMode === 'add' \r\n                ? ADDRESS_SERVER + \"AGGIUNGI_ATTUATORE.json\"\r\n                : ADDRESS_SERVER + \"AGGIORNA_TIPO_ATTUATORE.json\";\r\n\r\n            const payload = {\r\n                nome_attuatore: formData.nome_attuatore.toLowerCase(),\r\n                tipo_attuatore: formData.tipo_attuatore,\r\n                indirizzo_Ambiente: parseInt(formData.indirizzo_Ambiente) || 0,\r\n                indirizzo_PL: parseInt(formData.indirizzo_PL) || 0\r\n            };\r\n\r\n            // Aggiungi timer se tipo serranda/tapparella\r\n            if (formData.tipo_attuatore === 'serrande_tapparelle') {\r\n                payload.timer_salita = parseInt(formData.timer_salita) || 0;\r\n                payload.timer_discesa = parseInt(formData.timer_discesa) || 0;\r\n            }\r\n\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            });\r\n\r\n            if (response.ok) {\r\n                showMessage(\r\n                    modalMode === 'add' \r\n                        ? \"✅ Dispositivo aggiunto con successo!\" \r\n                        : \"✅ Dispositivo modificato con successo!\",\r\n                    \"success\"\r\n                );\r\n                handleCloseModal();\r\n                setTimeout(() => loadDevices(), 500);\r\n            } else {\r\n                showMessage(\"❌ Errore nel salvare il dispositivo\", \"danger\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Errore:\", error);\r\n            showMessage(\"❌ Errore di connessione\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (device) => {\r\n        if (!window.confirm(`Sei sicuro di voler eliminare \"${device.nome_attuatore}\"?`)) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(ADDRESS_SERVER + \"RIMUOVI_ATTUATORE.json\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ nome_attuatore: device.nome_attuatore })\r\n            });\r\n\r\n            if (response.ok) {\r\n                showMessage(\"✅ Dispositivo eliminato con successo!\", \"success\");\r\n                setTimeout(() => loadDevices(), 500);\r\n            } else {\r\n                showMessage(\"❌ Errore nell'eliminare il dispositivo\", \"danger\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Errore:\", error);\r\n            showMessage(\"❌ Errore di connessione\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const getDeviceIcon = (tipo) => {\r\n        const icons = {\r\n            'on_off': '💡',\r\n            'dimmer': '🔆',\r\n            'serrande_tapparelle': '🪟',\r\n            'sensori_temperatura': '🌡️',\r\n            'termostati': '🎚️',\r\n            'serrature': '🔒',\r\n            'campanello_porta': '🔔',\r\n            'gruppi': '📦'\r\n        };\r\n        return icons[tipo] || '❓';\r\n    };\r\n\r\n    const getDeviceLabel = (tipo) => {\r\n        const labels = {\r\n            'on_off': 'On/Off',\r\n            'dimmer': 'Dimmer',\r\n            'serrande_tapparelle': 'Serranda/Tapparella',\r\n            'sensori_temperatura': 'Sensore Temperatura',\r\n            'termostati': 'Termostato',\r\n            'serrature': 'Serratura',\r\n            'campanello_porta': 'Campanello',\r\n            'gruppi': 'Gruppo'\r\n        };\r\n        return labels[tipo] || tipo;\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                <h1 className=\"display-4\">Configurazione Dispositivi</h1>\r\n                <p className=\"lead\">Gestisci i dispositivi del bus SCS BTicino</p>\r\n            </div>\r\n\r\n            {message && (\r\n                <Alert variant={messageType} onClose={() => setMessage(null)} dismissible>\r\n                    {message}\r\n                </Alert>\r\n            )}\r\n\r\n            {/* ✅ DATABASE MANAGER */}\r\n            <DatabaseManager />\r\n\r\n            {/* GESTIONE DISPOSITIVI */}\r\n            <Card className=\"mb-4 shadow-sm\">\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                    <h4 className=\"my-0 font-weight-normal\">🔌 Dispositivi Configurati</h4>\r\n                    <Button variant=\"primary\" onClick={() => handleOpenModal('add')}>\r\n                        ➕ Aggiungi Dispositivo\r\n                    </Button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {listaDispositivi.length === 0 ? (\r\n                        <Alert variant=\"info\">\r\n                            Nessun dispositivo configurato. Clicca su \"Aggiungi Dispositivo\" per iniziare.\r\n                        </Alert>\r\n                    ) : (\r\n                        <Table responsive hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Tipo</th>\r\n                                    <th>Nome</th>\r\n                                    <th>Indirizzo A</th>\r\n                                    <th>Indirizzo PL</th>\r\n                                    <th>Azioni</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {listaDispositivi.map((device, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>\r\n                                            <span style={{ fontSize: '1.5rem', marginRight: '0.5rem' }}>\r\n                                                {getDeviceIcon(device.tipo_attuatore)}\r\n                                            </span>\r\n                                            <Badge bg=\"secondary\">\r\n                                                {getDeviceLabel(device.tipo_attuatore)}\r\n                                            </Badge>\r\n                                        </td>\r\n                                        <td><strong>{device.nome_attuatore}</strong></td>\r\n                                        <td>{device.indirizzo_Ambiente}</td>\r\n                                        <td>{device.indirizzo_PL}</td>\r\n                                        <td>\r\n                                            <Button\r\n                                                variant=\"outline-primary\"\r\n                                                size=\"sm\"\r\n                                                className=\"me-2\"\r\n                                                onClick={() => handleOpenModal('edit', device)}\r\n                                            >\r\n                                                ✏️ Modifica\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"outline-danger\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => handleDelete(device)}\r\n                                            >\r\n                                                🗑️ Elimina\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            {/* MODAL AGGIUNGI/MODIFICA */}\r\n            <Modal show={showModal} onHide={handleCloseModal} size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {modalMode === 'add' ? '➕ Aggiungi Dispositivo' : '✏️ Modifica Dispositivo'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Nome Dispositivo *</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"nome_attuatore\"\r\n                                        value={formData.nome_attuatore}\r\n                                        onChange={handleInputChange}\r\n                                        placeholder=\"es: luce camera\"\r\n                                        required\r\n                                        disabled={modalMode === 'edit'}\r\n                                    />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        Il nome verrà convertito automaticamente in minuscolo\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Tipo Dispositivo *</Form.Label>\r\n                                    <Form.Select\r\n                                        name=\"tipo_attuatore\"\r\n                                        value={formData.tipo_attuatore}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"on_off\">💡 On/Off</option>\r\n                                        <option value=\"dimmer\">🔆 Dimmer</option>\r\n                                        <option value=\"serrande_tapparelle\">🪟 Serranda/Tapparella</option>\r\n                                        <option value=\"sensori_temperatura\">🌡️ Sensore Temperatura</option>\r\n                                        <option value=\"termostati\">🎚️ Termostato</option>\r\n                                        <option value=\"serrature\">🔒 Serratura</option>\r\n                                        <option value=\"campanello_porta\">🔔 Campanello</option>\r\n                                        <option value=\"gruppi\">📦 Gruppo</option>\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Indirizzo Ambiente (A)</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        name=\"indirizzo_Ambiente\"\r\n                                        value={formData.indirizzo_Ambiente}\r\n                                        onChange={handleInputChange}\r\n                                        placeholder=\"0-15\"\r\n                                        min=\"0\"\r\n                                        max=\"15\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Indirizzo Punto Luce (PL)</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        name=\"indirizzo_PL\"\r\n                                        value={formData.indirizzo_PL}\r\n                                        onChange={handleInputChange}\r\n                                        placeholder=\"0-15\"\r\n                                        min=\"0\"\r\n                                        max=\"15\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {/* Timer per serrande/tapparelle */}\r\n                        {formData.tipo_attuatore === 'serrande_tapparelle' && (\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Timer Salita (ms)</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"timer_salita\"\r\n                                            value={formData.timer_salita}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"es: 20000\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col md={6}>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Timer Discesa (ms)</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"timer_discesa\"\r\n                                            value={formData.timer_discesa}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"es: 20000\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n\r\n                        <Alert variant=\"info\" className=\"mb-0\">\r\n                            <small>\r\n                                <strong>ℹ️ Nota:</strong> Gli indirizzi devono corrispondere a quelli \r\n                                configurati fisicamente sul bus SCS.\r\n                            </small>\r\n                        </Alert>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n                        Annulla\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>\r\n                        {modalMode === 'add' ? '➕ Aggiungi' : '💾 Salva Modifiche'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Configurazione;","import react from 'react';\r\nimport { Container, Navbar, Nav, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport Test from '../Test/Test';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./../App.css\";\r\n\r\nfunction Homepage() {\r\n    let history = useHistory();\r\n\r\n    const handleClickConfigurazioni = () => {\r\n        history.push(\"configurazione.html\");\r\n    };\r\n    \r\n    const handleClickTest = () => {\r\n        history.push(\"test.html\");\r\n    };\r\n    \r\n    const handleClickNodeRed = () => {\r\n        history.push(\"noderedHome.html\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"justify-content-md-center\">\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">SCS-bus Raspberry shield</h1>\r\n                    <p className=\"lead\">Benvenuti nella pagina di configurazione dei dispositivi del Bus SCS e Test</p>\r\n                </div>\r\n\r\n                <div className=\"card-deck text-center\">\r\n                    {/* CARD CONFIGURAZIONE */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Attuatori on/off</li>\r\n                                <li>Dimmer</li>\r\n                                <li>Serrande/Tapparelle</li>\r\n                                <li>Gruppi</li>\r\n                                <li>Sensori Temperatura</li>\r\n                                <li>Termostati</li>\r\n                                <li>Serrature</li>\r\n                                <li>Campanello porta</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-primary mt-auto\" \r\n                                onClick={handleClickConfigurazioni}\r\n                            >\r\n                                Entra\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CARD TEST */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Test</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Attuatori on/off</li>\r\n                                <li>Dimmer</li>\r\n                                <li>Serrande/Tapparelle</li>\r\n                                <li>Gruppi</li>\r\n                                <li>Sensori Temperatura</li>\r\n                                <li>Termostati</li>\r\n                                <li>Serrature</li>\r\n                                <li>Campanello porta</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-primary mt-auto\" \r\n                                onClick={handleClickTest}\r\n                            >\r\n                                Entra\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CARD NODE-RED */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Node-RED</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>AWS IoTs</li>\r\n                                <li>Alexa virtual-smart-home</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-primary mt-auto\" \r\n                                onClick={handleClickNodeRed}\r\n                            >\r\n                                Entra\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CARD DATABASE */}\r\n                    <div className=\"card mb-4 shadow-sm d-flex flex-column\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Database</h4>\r\n                        </div>\r\n                        <div className=\"card-body d-flex flex-column\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>Backup automatico</li>\r\n                                <li>Download database</li>\r\n                                <li>Upload database</li>\r\n                                <li>Ripristino configurazione</li>\r\n                            </ul>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-lg btn-block btn-success mt-auto\" \r\n                                onClick={() => history.push(\"configurazione.html\")}\r\n                            >\r\n                                Gestisci\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedAlexa() {\r\n    //const [startNodered_enable, setstartNodered_enable] = useState(true);\r\n    const [stato_esporta, setstato_esporta] = useState(true);\r\n    const [stato_startNode, setstato_startNode] = useState(false);\r\n    const [link_nodered, setlink_nodered] = useState(\"\");\r\n\r\n    const [flow_anuale, setflow_anuale] = useState(\"\");\r\n    const textAreaRef = useRef(null);\r\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\r\n\r\n\r\n    const [secondu, setsecondu] = useState(30);\r\n    const [over, setover] = useState(false);\r\n    const [timerID, settimerID] = useState(null);\r\n\r\n    var second = 30;\r\n\r\n    useEffect(() => {\r\n        if (secondu === 0) {\r\n            clearTimeout(timerID);\r\n        }\r\n\r\n        return () => {\r\n            //console.log(\"returnnnnnn\");\r\n            // clearTimeout(timerID);\r\n        };\r\n    }, [secondu]);\r\n\r\n\r\n    const tick = () => {\r\n        console.log('tick ' + second);\r\n        if (second === 0) setover(true);\r\n        else {\r\n            console.log(second);\r\n            second = (second - 1);\r\n            setsecondu(second);\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handle_count = () => {\r\n        if (stato_startNode === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        if (secondu === 0) {\r\n            return (\r\n                <>\r\n                    <a href={link_nodered} target=\"_blank\">{link_nodered} </a>\r\n                </>\r\n            );\r\n        } else {\r\n            console.log(\"countdown \" + secondu);\r\n\r\n            return (\r\n                <>\r\n                    <p> Wait NodeRed start: {secondu} sec</p>\r\n                </>\r\n            );\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handle_Esporta = () => {\r\n        setstato_esporta(false);\r\n        var add = window.location.host.split(\":\");\r\n        setlink_nodered('http://' + add[0] + ':1880');\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Send_to_NodeRed.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                });\r\n        };\r\n        fetchData();\r\n        handle_startNodered();\r\n    };\r\n\r\n\r\n    const handle_startNodered = () => {\r\n\r\n        const t = setInterval(() => tick(), 1000);\r\n        settimerID(t);\r\n        //        clearTimeout(timerID);\r\n\r\n        setstato_startNode(true);\r\n\r\n    };\r\n\r\n\r\n    const handle_GeneraManuale = () => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Get_NodeRed_manual_flow.json')\r\n                .then(res => res.text())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    setflow_anuale(data);\r\n                });\r\n        };\r\n        fetchData();\r\n\r\n    };\r\n\r\n    const handle_codeflow_manuale = () => {\r\n        if (flow_anuale === '') {\r\n            return (\r\n                <>\r\n\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\r\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_CopyClipboard = (e) => {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        // This is just personal preference.\r\n        // I prefer to not show the whole text area selected.\r\n        e.target.focus();\r\n        setstato_startmanuale(true);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handle_codeflow_manuale_incolla = () => {\r\n        var add = window.location.host.split(\":\");\r\n        var add2 = ('http://' + add[0] + ':1880');\r\n        if (stato_startmanuale === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <ul style={{ listStyleType: 'none' }} >\r\n                    <li>Apri node-red</li>\r\n                    <li>Importa Flow</li>\r\n                    <li>Incolla il contenuto generato</li>\r\n                </ul>\r\n\r\n\r\n                <a href={add2} target=\"_blank\">{add2} </a>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Automatica</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Esporta auto-configurazione</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_Esporta} >1 - Esporta su Node-Red</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_count()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"card-deck text-center\"  >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">Configurazione Manuale</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container\"><i style={{ color: \"red\" }} >Eseguire i seguenti passaggi descritti in seguito:</i></div>\r\n                            <h1 className=\"card-title \"> <small className=\"text-muted\"> </small></h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Genera NodeRed Flow</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale()}\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale_incolla()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedAlexa;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Form, Button, Control, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.118/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedHome() {\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"justify-content-md-center\" style={{}}>\r\n                <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                    <h1 className=\"display-4\">Node-Red configurazione con Alexa</h1>\r\n                </div>\r\n\r\n\r\n                <div className=\"card-deck text-center\" >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed AWS</h4>\r\n                        </div>\r\n                        <div>\r\n                            <p><i><small>Configurare prima AWS Server: <a href=\"http://scsshields.altervista.org/AWS_Skill_Bticino.html\" target=\"_blank\">Guida</a></small></i></p>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>                                    \r\n                                    <a href=\"/NoderedAlexaAWS.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"card-deck text-center\"  >\r\n                    <div className=\"card mb-4 shadow-sm\" style={{ border: \"1px solid black\" }}>\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"my-0 font-weight-normal\">NodeRed \"virtual-smart-home\" library</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <a href=\"/noderedAlexa.html\"><Button variant=\"outline-primary\"  >Entra</Button></a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedHome;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\r\n\r\nimport \"./../App.css\";\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NodeRedAWSDispositivi({ device }) {\r\n    // EndPoint\r\n    const [name_EndPoint, setname_EndPoint] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setname_EndPoint(device.nome_endpoint);\r\n    }, [device]);\r\n\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + 'SetDeviceEndPointAWS.json', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n        \r\n\r\n    //******************Device ENDPOINT******************\r\n    //change\r\n    const handleChangeAWSDeviceENDPOINT = (event) => {\r\n        setname_EndPoint(event.target.value);\r\n    }\r\n    const handleBlurAWSDeviceENDPOINT = (event) => {\r\n        //Qui ho il nome Attuatore Completo\r\n        //Update SERVER!\r\n        var datas = { 'nome_attuatore': device.nome_attuatore , 'nome_endpoint': event.target.value };\r\n        post_request_update_database(datas);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"text-primary text-center\">\r\n                    {device.nome_attuatore}\r\n                </Col>\r\n                <Col lg={6} className=\"text-center\">\r\n                </Col>\r\n                <Col>\r\n                    <input type=\"text\" className=\"form-control\" value={name_EndPoint} placeholder=\"Inserisci endpoint\" onChange={handleChangeAWSDeviceENDPOINT} onBlur={handleBlurAWSDeviceENDPOINT} />\r\n                </Col>\r\n            </Row>\r\n            <hr></hr>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NodeRedAWSDispositivi;","import { useState, useEffect, useRef } from 'react';\r\nimport { Container, Form, Navbar, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport NodeRedAWSDispositivi from \"./NodeRedAWSDispositivi\"\r\n\r\n\r\n\r\nimport \"./../App.css\";\r\n//https://www.pluralsight.com/guides/uploading-files-with-reactjs\r\n\r\n\r\n//const ADDRESS_SERVER = \"http://192.168.1.16/\";\r\nconst ADDRESS_SERVER = \"/\";\r\n\r\n\r\nfunction NoderedAlexaAWS() {\r\n    //Indirizzo EndPoint\r\n    const [add_EndPoint, setadd_EndPoint] = useState(\"\");\r\n    //File name Certificati\r\n    const [FILE_private_key, setFILE_private_key] = useState(\"\");\r\n    const [FILE_cert_pem, setFILE_cert_pem] = useState(\"\");\r\n    const [FILE_root_CA, setFILE_root_CA] = useState(\"\");\r\n    //Dispositivi e ENDPOINT\r\n    const [lista_dispositivi, setListaDispositivi] = useState([]);\r\n\r\n    const [flow_anuale, setflow_anuale] = useState(\"\");\r\n    const textAreaRef = useRef(null);\r\n    const [stato_startmanuale, setstato_startmanuale] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setListaDispositivi([]);\r\n\r\n        const fetchDataDispositivi = async () => {\r\n            await fetch(ADDRESS_SERVER + 'GetConfigurazionereact.json')\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    setListaDispositivi(data);\r\n                });\r\n        };\r\n\r\n\r\n        fetchData();\r\n        fetchDataDispositivi();\r\n\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        await fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                setadd_EndPoint(data.EndPoint);\r\n                setFILE_private_key(data.PRIVATE_KEY);\r\n                setFILE_cert_pem(data.CERT_PEM);\r\n                setFILE_root_CA(data.CRT);\r\n            });\r\n    };\r\n\r\n\r\n    //POST ---->OK<----\r\n    const post_request_update_database = (datas) => {\r\n        var data = JSON.stringify(datas);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: data\r\n        };\r\n        fetch(ADDRESS_SERVER + 'GetConfigurazionereactAWS.json', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"OKKKKKKKKKKKKKKKKK\");\r\n                console.log(data);\r\n            }\r\n            );\r\n    }\r\n\r\n\r\n    const [selectedFile, setSelectedFile] = useState();\r\n\r\n    const changeHandler = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        //setIsSelected(true);\r\n    };\r\n\r\n    const handleSubmission = (tipo) => {\r\n        const formData = new FormData();\r\n        formData.append('File', selectedFile);\r\n        fetch(\r\n            ADDRESS_SERVER + 'AWSCertificatiploadHandler.html?tipo=' + tipo,\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                console.log('Success:', result);\r\n                fetchData();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //******************Indirizzo ENDPOINT******************\r\n    //change\r\n    const handleChangeEndPoint = (event) => {\r\n        setadd_EndPoint(event.target.value);\r\n    }\r\n    const handleBlurEndPoint = (event) => {\r\n        //Qui ho il nome Attuatore Completo\r\n        //Update SERVER!\r\n        var datas = { 'EndPoint': event.target.value };\r\n        post_request_update_database(datas);\r\n    }\r\n\r\n\r\n\r\n    const handle_GeneraManuale = () => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch(ADDRESS_SERVER + 'Get_NodeRedAWS_manual_flow.json')\r\n                .then(res => res.text())\r\n                .then((data) => {\r\n                    setflow_anuale(data);\r\n                });\r\n        };\r\n        fetchData();\r\n\r\n    };\r\n    const handle_codeflow_manuale = () => {\r\n        if (flow_anuale === '') {\r\n            return (\r\n                <>\r\n\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Form.Control as=\"textarea\" rows={10} value={flow_anuale} readonly ref={textAreaRef} />\r\n                <Button variant=\"outline-primary\" onClick={handle_CopyClipboard}>Copy</Button>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_codeflow_manuale_incolla = () => {\r\n        var add = window.location.host.split(\":\");\r\n        var add2 = ('http://' + add[0] + ':1880');\r\n        if (stato_startmanuale === false) {\r\n            return (\r\n                <>\r\n                    <p></p>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <ul style={{ listStyleType: 'none' }} >\r\n                    <li>Apri node-red</li>\r\n                    <li>Importa Flow</li>\r\n                    <li>Incolla il contenuto generato</li>\r\n                </ul>\r\n\r\n\r\n                <a href={add2} target=\"_blank\">{add2} </a>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handle_CopyClipboard = (e) => {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        // This is just personal preference.\r\n        // I prefer to not show the whole text area selected.\r\n        e.target.focus();\r\n        setstato_startmanuale(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n                <h1 className=\"display-5\">Configurazione AWS-IoT</h1>\r\n            </div>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        EndPoint\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                </Col>\r\n                                <Col lg={6} className=\"text-primary text-center\">\r\n                                    <input type=\"text\" className=\"form-control\" value={add_EndPoint} placeholder=\"Inserire indirizzo EndPoint AWS IoT\" onChange={handleChangeEndPoint} onBlur={handleBlurEndPoint} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Certificati AWS-IoT\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    PRIVATE_KEY\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_private_key}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem.key\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('PRIVATE_KEY')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    CERT_PEM\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_cert_pem}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem.crt\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('CERT_PEM')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row>\r\n                                <Col lg={3} className=\"text-primary text-center\">\r\n                                    root-CA\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    \"{FILE_root_CA}\"\r\n                                </Col>\r\n                                <Col lg={3} className=\"text-center\">\r\n                                    <input type=\"file\" name=\"file\" accept=\".pem,.txt\" onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <button onClick={() => handleSubmission('root-CA')}>Submit</button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\" }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Assegnazione endpoint AWS lambda ai Dispositivi\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid>\r\n\r\n                                {lista_dispositivi.map((device, i) => (\r\n                                    <div key={i} className=\"container-fluid\">\r\n                                        <NodeRedAWSDispositivi device={device}  />\r\n                                    </div>\r\n                                ))}\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n            <Container style={{ paddingTop: \"20px\", paddingBottom: '40px' }} >\r\n                <Card style={{ width: '100%', border: \"1px solid black\" }}>\r\n                    <Card.Header>\r\n                        Genera Flow NodeRed\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Container fluid className='text-center'>\r\n\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                <li>\r\n                                    <p>Genera NodeRed Flow</p>\r\n                                    <Button variant=\"outline-primary\" onClick={handle_GeneraManuale} >Genera</Button>\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale()}\r\n                                </li>\r\n                                <li style={{ marginTop: \"20px\" }}>\r\n                                    {handle_codeflow_manuale_incolla()}\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NoderedAlexaAWS;","import { useState, useEffect } from 'react';\r\nimport MYnavBar from './MYnavBar'\r\nimport Test from './Test/Test'\r\nimport Configurazione from './Configurazione/Configurazione'\r\nimport Homepage from './HomePage/Homepage'\r\n\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport noderedAlexa from './NodeRedAlexa/NodeRedAlexa';\r\nimport noderedHome from './NodeRedAlexa/noderedHome';\r\nimport NoderedAlexaAWS from './NodeRedAlexa/noderedAlexaAWS';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <MYnavBar />\r\n\r\n        <Route exact path=\"/\" component={Homepage}/>\r\n        <Route exact path=\"/configurazione.html\" component={Configurazione}/>\r\n        <Route exact path=\"/test.html\" component={Test}/>\r\n        <Route exact path=\"/noderedHome.html\" component={noderedHome}/>\r\n        <Route exact path=\"/noderedAlexa.html\" component={noderedAlexa}/>\r\n        <Route exact path=\"/NoderedAlexaAWS.html\" component={NoderedAlexaAWS}/>\r\n\r\n\r\n      </div>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}